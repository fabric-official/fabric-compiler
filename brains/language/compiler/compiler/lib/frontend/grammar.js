"use strict";
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.SyntaxError = peg$SyntaxError;
exports.parse = peg$parse;
// Generated by Peggy 2.0.1.
//
// https://peggyjs.org/
function peg$subclass(child, parent) {
    function C() { this.constructor = child; }
    C.prototype = parent.prototype;
    child.prototype = new C();
}
function peg$SyntaxError(message, expected, found, location) {
    var self = Error.call(this, message);
    // istanbul ignore next Check is a necessary evil to support older environments
    if (Object.setPrototypeOf) {
        Object.setPrototypeOf(self, peg$SyntaxError.prototype);
    }
    self.expected = expected;
    self.found = found;
    self.location = location;
    self.name = "SyntaxError";
    return self;
}
peg$subclass(peg$SyntaxError, Error);
function peg$padEnd(str, targetLength, padString) {
    //   padString = padString || " ";
    if (str.length > targetLength) {
        return str;
    }
    targetLength -= str.length;
    padString += padString.repeat(targetLength);
    return str + padString.slice(0, targetLength);
}
peg$SyntaxError.prototype.format = function (sources) {
    var str = "Error: " + this.message;
    if (this.location) {
        var src = null;
        var k;
        for (k = 0; k < sources.length; k++) {
            if (sources[k].source === this.location.source) {
                //         src = sources[k].text.split(/\r\n|\n|\r/g);
                break;
            }
        }
        var s = this.location.start;
        var loc = this.location.source + ":" + s.line + ":" + s.column;
        if (src) {
            var e = this.location.end;
            var filler = peg$padEnd("", s.line.toString().length, ' ');
            var line = src[s.line - 1];
            var last = s.line === e.line ? e.column : line.length + 1;
            var hatLen = (last - s.column) || 1;
            str += "\n --> " + loc + "\n"
                + filler + " |\n"
                + s.line + " | " + line + "\n"
                + filler + " | " + peg$padEnd("", s.column - 1, ' ')
                + peg$padEnd("", hatLen, "^");
        }
        else {
            str += "\n at " + loc;
        }
    }
    return str;
};
peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
        literal: function (expectation) {
            return "\"" + literalEscape(expectation.text) + "\"";
        },
        class: function (expectation) {
            var escapedParts = expectation.parts.map(function (part) {
                return Array.isArray(part)
                    ? classEscape(part[0]) + "-" + classEscape(part[1])
                    : classEscape(part);
            });
            return "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]";
        },
        any: function () {
            return "any character";
        },
        end: function () {
            return "end of input";
        },
        other: function (expectation) {
            return expectation.description;
        }
    };
    function hex(ch) {
        return ch.charCodeAt(0).toString(16).toUpperCase();
    }
    function literalEscape(s) {
        return s
            .replace(/\\/g, "\\\\")
            .replace(/"/g, "\\\"")
            .replace(/\0/g, "\\0")
            .replace(/\t/g, "\\t")
            .replace(/\n/g, "\\n")
            .replace(/\r/g, "\\r")
            .replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); })
            .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); });
    }
    function classEscape(s) {
        return s
            .replace(/\\/g, "\\\\")
            .replace(/\]/g, "\\]")
            .replace(/\^/g, "\\^")
            .replace(/-/g, "\\-")
            .replace(/\0/g, "\\0")
            .replace(/\t/g, "\\t")
            .replace(/\n/g, "\\n")
            .replace(/\r/g, "\\r")
            .replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); })
            .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); });
    }
    function describeExpectation(expectation) {
        return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }
    function describeExpected(expected) {
        var descriptions = expected.map(describeExpectation);
        var i, j;
        descriptions.sort();
        if (descriptions.length > 0) {
            for (i = 1, j = 1; i < descriptions.length; i++) {
                if (descriptions[i - 1] !== descriptions[i]) {
                    descriptions[j] = descriptions[i];
                    j++;
                }
            }
            descriptions.length = j;
        }
        switch (descriptions.length) {
            case 1:
                return descriptions[0];
            case 2:
                return descriptions[0] + " or " + descriptions[1];
            default:
                return descriptions.slice(0, -1).join(", ")
                    + ", or "
                    + descriptions[descriptions.length - 1];
        }
    }
    function describeFound(found) {
        return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }
    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
};
function peg$parse(input, options) {
    //   options = options !== undefined ? options : {};
    var peg$FAILED = {};
    var peg$source = options.grammarSource;
    var peg$startRuleFunctions = { WS: peg$parseWS };
    var peg$startRuleFunction = peg$parseWS;
    var peg$c0 = "//";
    var peg$c1 = "/";
    var peg$c2 = "\"";
    var peg$c3 = "\"\"\"";
    var peg$c4 = ".";
    var peg$c5 = "-";
    var peg$c6 = "T";
    var peg$c7 = ":";
    var peg$c8 = "Z";
    var peg$c9 = "+";
    var peg$c10 = "module";
    var peg$c11 = "import";
    var peg$c12 = "device";
    var peg$c13 = "policy";
    var peg$c14 = "goal";
    var peg$c15 = "type";
    var peg$c16 = "agent";
    var peg$c17 = "executionBlock";
    var peg$c18 = "polyBlock";
    var peg$c19 = "workflow";
    var peg$c20 = "coordinationBlock";
    var peg$c21 = "auditTrail";
    var peg$c22 = "{";
    var peg$c23 = "}";
    var peg$c24 = ";";
    var peg$c25 = ",";
    var peg$c26 = "caps";
    var peg$c27 = "[";
    var peg$c28 = "]";
    var peg$c29 = "@";
    var peg$c30 = "privacy";
    var peg$c31 = "energy_budget";
    var peg$c32 = "per_";
    var peg$c33 = "fairness";
    var peg$c34 = "weighted";
    var peg$c35 = "(";
    var peg$c36 = ")";
    var peg$c37 = "consentRequired";
    var peg$c38 = "true";
    var peg$c39 = "false";
    var peg$c40 = "purpose";
    var peg$c41 = "dpia";
    var peg$c42 = "dpiaReport";
    var peg$c43 = "constraints";
    var peg$c44 = "<=";
    var peg$c45 = ">=";
    var peg$c46 = "<";
    var peg$c47 = ">";
    var peg$c48 = "==";
    var peg$c49 = "optimize";
    var peg$c50 = "for";
    var peg$c51 = "=";
    var peg$c52 = "union";
    var peg$c53 = "id";
    var peg$c54 = "model_id";
    var peg$c55 = "created_by";
    var peg$c56 = "timestamp";
    var peg$c57 = "inputs";
    var peg$c58 = "outputs";
    var peg$c59 = "learns";
    var peg$c60 = "continuous";
    var peg$c61 = "explain";
    var peg$c62 = "any";
    var peg$c63 = "fallback";
    var peg$c64 = "state";
    var peg$c65 = "block";
    var peg$c66 = "entry";
    var peg$c67 = "lang";
    var peg$c68 = "code";
    var peg$c69 = "container";
    var peg$c70 = "plan";
    var peg$c71 = "coordination";
    var peg$c72 = "feedback";
    var peg$c73 = "->";
    var peg$c74 = "consensus";
    var peg$c75 = "conflict";
    var peg$c76 = "metrics";
    var peg$c77 = "interval";
    var peg$c78 = "onError";
    var peg$c79 = "retry";
    var peg$c80 = "times";
    var peg$c81 = "with";
    var peg$c82 = "backoff";
    var peg$c83 = "schedule";
    var peg$c84 = "cron";
    var peg$c85 = "backfill";
    var peg$c86 = "window";
    var peg$c87 = "alert";
    var peg$c88 = "if";
    var peg$c89 = "then";
    var peg$c90 = "notify";
    var peg$c91 = "agents";
    var peg$c92 = "protocol";
    var peg$c93 = "on_commit";
    var peg$c94 = "snapshotOn";
    var peg$c95 = "store";
    var peg$r0 = /^[ \t\r\n]/;
    var peg$r1 = /^[\\r\\n]/;
    var peg$r2 = /^[A-Za-z_]/;
    var peg$r3 = /^[A-Za-z0-9_]/;
    var peg$r4 = /^[0-9]/;
    var peg$r5 = /^[0-9a-fA-F]/;
    var peg$e0 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false);
    var peg$e1 = peg$literalExpectation("//", false);
    var peg$e2 = peg$classExpectation(["\\", "r", "\\", "n"], false, false);
    var peg$e3 = peg$anyExpectation();
    var peg$e4 = peg$literalExpectation("/", false);
    var peg$e5 = peg$classExpectation([["A", "Z"], ["a", "z"], "_"], false, false);
    var peg$e6 = peg$classExpectation([["A", "Z"], ["a", "z"], ["0", "9"], "_"], false, false);
    var peg$e7 = peg$literalExpectation("\"", false);
    var peg$e8 = peg$literalExpectation("\"\"\"", false);
    var peg$e9 = peg$classExpectation([["0", "9"]], false, false);
    var peg$e10 = peg$literalExpectation(".", false);
    var peg$e11 = peg$literalExpectation("-", false);
    var peg$e12 = peg$classExpectation([["0", "9"], ["a", "f"], ["A", "F"]], false, false);
    var peg$e13 = peg$literalExpectation("T", false);
    var peg$e14 = peg$literalExpectation(":", false);
    var peg$e15 = peg$literalExpectation("Z", false);
    var peg$e16 = peg$literalExpectation("+", false);
    var peg$e17 = peg$literalExpectation("module", false);
    var peg$e18 = peg$literalExpectation("import", false);
    var peg$e19 = peg$literalExpectation("device", false);
    var peg$e20 = peg$literalExpectation("policy", false);
    var peg$e21 = peg$literalExpectation("goal", false);
    var peg$e22 = peg$literalExpectation("type", false);
    var peg$e23 = peg$literalExpectation("agent", false);
    var peg$e24 = peg$literalExpectation("executionBlock", false);
    var peg$e25 = peg$literalExpectation("polyBlock", false);
    var peg$e26 = peg$literalExpectation("workflow", false);
    var peg$e27 = peg$literalExpectation("coordinationBlock", false);
    var peg$e28 = peg$literalExpectation("auditTrail", false);
    var peg$e29 = peg$literalExpectation("{", false);
    var peg$e30 = peg$literalExpectation("}", false);
    var peg$e31 = peg$literalExpectation(";", false);
    var peg$e32 = peg$literalExpectation(",", false);
    var peg$e33 = peg$literalExpectation("caps", false);
    var peg$e34 = peg$literalExpectation("[", false);
    var peg$e35 = peg$literalExpectation("]", false);
    var peg$e36 = peg$literalExpectation("@", false);
    var peg$e37 = peg$literalExpectation("privacy", false);
    var peg$e38 = peg$literalExpectation("energy_budget", false);
    var peg$e39 = peg$literalExpectation("per_", false);
    var peg$e40 = peg$literalExpectation("fairness", false);
    var peg$e41 = peg$literalExpectation("weighted", false);
    var peg$e42 = peg$literalExpectation("(", false);
    var peg$e43 = peg$literalExpectation(")", false);
    var peg$e44 = peg$literalExpectation("consentRequired", false);
    var peg$e45 = peg$literalExpectation("true", false);
    var peg$e46 = peg$literalExpectation("false", false);
    var peg$e47 = peg$literalExpectation("purpose", false);
    var peg$e48 = peg$literalExpectation("dpia", false);
    var peg$e49 = peg$literalExpectation("dpiaReport", false);
    var peg$e50 = peg$literalExpectation("constraints", false);
    var peg$e51 = peg$literalExpectation("<=", false);
    var peg$e52 = peg$literalExpectation(">=", false);
    var peg$e53 = peg$literalExpectation("<", false);
    var peg$e54 = peg$literalExpectation(">", false);
    var peg$e55 = peg$literalExpectation("==", false);
    var peg$e56 = peg$literalExpectation("optimize", false);
    var peg$e57 = peg$literalExpectation("for", false);
    var peg$e58 = peg$literalExpectation("=", false);
    var peg$e59 = peg$literalExpectation("union", false);
    var peg$e60 = peg$literalExpectation("id", false);
    var peg$e61 = peg$literalExpectation("model_id", false);
    var peg$e62 = peg$literalExpectation("created_by", false);
    var peg$e63 = peg$literalExpectation("timestamp", false);
    var peg$e64 = peg$literalExpectation("inputs", false);
    var peg$e65 = peg$literalExpectation("outputs", false);
    var peg$e66 = peg$literalExpectation("learns", false);
    var peg$e67 = peg$literalExpectation("continuous", false);
    var peg$e68 = peg$literalExpectation("explain", false);
    var peg$e69 = peg$literalExpectation("any", false);
    var peg$e70 = peg$literalExpectation("fallback", false);
    var peg$e71 = peg$literalExpectation("state", false);
    var peg$e72 = peg$literalExpectation("block", false);
    var peg$e73 = peg$literalExpectation("entry", false);
    var peg$e74 = peg$literalExpectation("lang", false);
    var peg$e75 = peg$literalExpectation("code", false);
    var peg$e76 = peg$literalExpectation("container", false);
    var peg$e77 = peg$literalExpectation("plan", false);
    var peg$e78 = peg$literalExpectation("coordination", false);
    var peg$e79 = peg$literalExpectation("feedback", false);
    var peg$e80 = peg$literalExpectation("->", false);
    var peg$e81 = peg$literalExpectation("consensus", false);
    var peg$e82 = peg$literalExpectation("conflict", false);
    var peg$e83 = peg$literalExpectation("metrics", false);
    var peg$e84 = peg$literalExpectation("interval", false);
    var peg$e85 = peg$literalExpectation("onError", false);
    var peg$e86 = peg$literalExpectation("retry", false);
    var peg$e87 = peg$literalExpectation("times", false);
    var peg$e88 = peg$literalExpectation("with", false);
    var peg$e89 = peg$literalExpectation("backoff", false);
    var peg$e90 = peg$literalExpectation("schedule", false);
    var peg$e91 = peg$literalExpectation("cron", false);
    var peg$e92 = peg$literalExpectation("backfill", false);
    var peg$e93 = peg$literalExpectation("window", false);
    var peg$e94 = peg$literalExpectation("alert", false);
    var peg$e95 = peg$literalExpectation("if", false);
    var peg$e96 = peg$literalExpectation("then", false);
    var peg$e97 = peg$literalExpectation("notify", false);
    var peg$e98 = peg$literalExpectation("agents", false);
    var peg$e99 = peg$literalExpectation("protocol", false);
    var peg$e100 = peg$literalExpectation("on_commit", false);
    var peg$e101 = peg$literalExpectation("snapshotOn", false);
    var peg$e102 = peg$literalExpectation("store", false);
    var peg$currPos = 0;
    var peg$savedPos = 0;
    var peg$posDetailsCache = [{ line: 1, column: 1 }];
    var peg$maxFailPos = 0;
    var peg$maxFailExpected = [];
    var peg$silentFails = 0;
    var peg$result;
    if ("startRule" in options) {
        if (!(options.startRule in peg$startRuleFunctions)) {
            throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
        }
        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }
    function text() {
        return input.substring(peg$savedPos, peg$currPos);
    }
    function offset() {
        return peg$savedPos;
    }
    function range() {
        return {
            source: peg$source,
            start: peg$savedPos,
            end: peg$currPos
        };
    }
    function location() {
        return peg$computeLocation(peg$savedPos, peg$currPos);
    }
    function expected(description, location) {
        location: peg$computeLocation(peg$savedPos, peg$currPos);
        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);
    }
    function error(message, location) {
        location: peg$computeLocation(peg$savedPos, peg$currPos);
        throw peg$buildSimpleError(message, location);
    }
    function peg$literalExpectation(text, ignoreCase) {
        return { type: "literal", text: text, ignoreCase: ignoreCase };
    }
    function peg$classExpectation(parts, inverted, ignoreCase) {
        return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
    }
    function peg$anyExpectation() {
        return { type: "any" };
    }
    function peg$endExpectation() {
        return { type: "end" };
    }
    function peg$otherExpectation(description) {
        return { type: "other", description: description };
    }
    function peg$computePosDetails(pos) {
        var details = peg$posDetailsCache[pos];
        var p;
        if (details) {
            return details;
        }
        else {
            //       p = pos - 1;
            while (!peg$posDetailsCache[p]) {
                p--;
            }
            //       details = peg$posDetailsCache[p];
            //       details = {
            line: details.line,
                column;
            details.column;
        }
        ;
        while (p < pos) {
            if (input.charCodeAt(p) === 10) {
                details.line++;
                details.column = 1;
            }
            else {
                details.column++;
            }
            p++;
        }
        peg$posDetailsCache[pos] = details;
        return details;
    }
}
function peg$computeLocation(startPos, endPos) {
    var startPosDetails = peg$computePosDetails(startPos);
    var endPosDetails = peg$computePosDetails(endPos);
    return {
        source: peg$source,
        start: {
            offset: startPos,
            line: startPosDetails.line,
            column: startPosDetails.column
        },
        end: {
            offset: endPos,
            line: endPosDetails.line,
            column: endPosDetails.column
        }
    };
}
function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) {
        return;
    }
    if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
    }
    peg$maxFailExpected.push(expected);
}
function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location);
}
function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
}
function peg$parseWS() {
    var s0, s1;
    //     s0 = [];
    if (peg$r0.test(input.charAt(peg$currPos))) {
        //       s1 = input.charAt(peg$currPos);
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e0);
        }
    }
    if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
            s0.push(s1);
            if (peg$r0.test(input.charAt(peg$currPos))) {
                //           s1 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e0);
                }
            }
        }
    }
    else {
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseCOMMENT() {
    var s0, s1, s2, s3, s4, s5;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c0) {
        //       s1 = peg$c0;
        peg$currPos += 2;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e1);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$currPos;
        peg$silentFails++;
        if (peg$r1.test(input.charAt(peg$currPos))) {
            //         s5 = input.charAt(peg$currPos);
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e2);
            }
        }
        peg$silentFails--;
        if (s5 === peg$FAILED) {
            //         s4 = undefined;
        }
        else {
            peg$currPos = s4;
            //         s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
            if (input.length > peg$currPos) {
                //           s5 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e3);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s4 = [s4, s5];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$currPos;
            peg$silentFails++;
            if (peg$r1.test(input.charAt(peg$currPos))) {
                //           s5 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e2);
                }
            }
            peg$silentFails--;
            if (s5 === peg$FAILED) {
                //           s4 = undefined;
            }
            else {
                peg$currPos = s4;
                //           s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
                if (input.length > peg$currPos) {
                    //             s5 = input.charAt(peg$currPos);
                    peg$currPos++;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e3);
                    }
                }
                if (s5 !== peg$FAILED) {
                    //             s4 = [s4, s5];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseBLOCK_COMMENT() {
    var s0, s1, s2, s3, s4, s5;
    //     s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 47) {
        //       s1 = peg$c1;
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e4);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$currPos;
        peg$silentFails++;
        if (input.charCodeAt(peg$currPos) === 47) {
            //         s5 = peg$c1;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e4);
            }
        }
        peg$silentFails--;
        if (s5 === peg$FAILED) {
            //         s4 = undefined;
        }
        else {
            peg$currPos = s4;
            //         s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
            if (input.length > peg$currPos) {
                //           s5 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e3);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s4 = [s4, s5];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$currPos;
            peg$silentFails++;
            if (input.charCodeAt(peg$currPos) === 47) {
                //           s5 = peg$c1;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e4);
                }
            }
            peg$silentFails--;
            if (s5 === peg$FAILED) {
                //           s4 = undefined;
            }
            else {
                peg$currPos = s4;
                //           s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
                if (input.length > peg$currPos) {
                    //             s5 = input.charAt(peg$currPos);
                    peg$currPos++;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e3);
                    }
                }
                if (s5 !== peg$FAILED) {
                    //             s4 = [s4, s5];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        if (input.charCodeAt(peg$currPos) === 47) {
            //         s3 = peg$c1;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e4);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s1 = [s1, s2, s3];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parse_() {
    var s0, s1;
    //     s0 = [];
    //     s1 = peg$parseWS();
    if (s1 === peg$FAILED) {
        //       s1 = peg$parseCOMMENT();
        if (s1 === peg$FAILED) {
            //         s1 = peg$parseBLOCK_COMMENT();
        }
    }
    while (s1 !== peg$FAILED) {
        s0.push(s1);
        //       s1 = peg$parseWS();
        if (s1 === peg$FAILED) {
            //         s1 = peg$parseCOMMENT();
            if (s1 === peg$FAILED) {
                //           s1 = peg$parseBLOCK_COMMENT();
            }
        }
    }
    return s0;
}
function peg$parseIdentifier() {
    var s0, s1, s2, s3, s4;
    //     s0 = peg$currPos;
    //     s1 = peg$currPos;
    peg$silentFails++;
    //     s2 = peg$parseReserved();
    peg$silentFails--;
    if (s2 === peg$FAILED) {
        //       s1 = undefined;
    }
    else {
        peg$currPos = s1;
        //       s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
        if (peg$r2.test(input.charAt(peg$currPos))) {
            //         s2 = input.charAt(peg$currPos);
            peg$currPos++;
        }
        else {
            //         s2 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e5);
            }
        }
        if (s2 !== peg$FAILED) {
            //         s3 = [];
            if (peg$r3.test(input.charAt(peg$currPos))) {
                //           s4 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s4 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e6);
                }
            }
            while (s4 !== peg$FAILED) {
                s3.push(s4);
                if (peg$r3.test(input.charAt(peg$currPos))) {
                    //             s4 = input.charAt(peg$currPos);
                    peg$currPos++;
                }
                else {
                    //             s4 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e6);
                    }
                }
            }
            //         s1 = [s1, s2, s3];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseStringLiteral() {
    var s0, s1, s2, s3, s4, s5;
    //     s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 34) {
        //       s1 = peg$c2;
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e7);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$currPos;
        peg$silentFails++;
        if (input.charCodeAt(peg$currPos) === 34) {
            //         s5 = peg$c2;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e7);
            }
        }
        peg$silentFails--;
        if (s5 === peg$FAILED) {
            //         s4 = undefined;
        }
        else {
            peg$currPos = s4;
            //         s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
            if (input.length > peg$currPos) {
                //           s5 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e3);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s4 = [s4, s5];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$currPos;
            peg$silentFails++;
            if (input.charCodeAt(peg$currPos) === 34) {
                //           s5 = peg$c2;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e7);
                }
            }
            peg$silentFails--;
            if (s5 === peg$FAILED) {
                //           s4 = undefined;
            }
            else {
                peg$currPos = s4;
                //           s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
                if (input.length > peg$currPos) {
                    //             s5 = input.charAt(peg$currPos);
                    peg$currPos++;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e3);
                    }
                }
                if (s5 !== peg$FAILED) {
                    //             s4 = [s4, s5];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        if (input.charCodeAt(peg$currPos) === 34) {
            //         s3 = peg$c2;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e7);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s1 = [s1, s2, s3];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = peg$currPos;
        if (input.substr(peg$currPos, 3) === peg$c3) {
            //         s1 = peg$c3;
            peg$currPos += 3;
        }
        else {
            //         s1 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e8);
            }
        }
        if (s1 !== peg$FAILED) {
            //         s2 = [];
            //         s3 = peg$currPos;
            //         s4 = peg$currPos;
            peg$silentFails++;
            if (input.substr(peg$currPos, 3) === peg$c3) {
                //           s5 = peg$c3;
                peg$currPos += 3;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e8);
                }
            }
            peg$silentFails--;
            if (s5 === peg$FAILED) {
                //           s4 = undefined;
            }
            else {
                peg$currPos = s4;
                //           s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
                if (input.length > peg$currPos) {
                    //             s5 = input.charAt(peg$currPos);
                    peg$currPos++;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e3);
                    }
                }
                if (s5 !== peg$FAILED) {
                    //             s4 = [s4, s5];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
            while (s3 !== peg$FAILED) {
                s2.push(s3);
                //           s3 = peg$currPos;
                //           s4 = peg$currPos;
                peg$silentFails++;
                if (input.substr(peg$currPos, 3) === peg$c3) {
                    //             s5 = peg$c3;
                    peg$currPos += 3;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e8);
                    }
                }
                peg$silentFails--;
                if (s5 === peg$FAILED) {
                    //             s4 = undefined;
                }
                else {
                    peg$currPos = s4;
                    //             s4 = peg$FAILED;
                }
                if (s4 !== peg$FAILED) {
                    if (input.length > peg$currPos) {
                        //               s5 = input.charAt(peg$currPos);
                        peg$currPos++;
                    }
                    else {
                        //               s5 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e3);
                        }
                    }
                    if (s5 !== peg$FAILED) {
                        //               s4 = [s4, s5];
                        //               s3 = s4;
                    }
                    else {
                        peg$currPos = s3;
                        //               s3 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            if (input.substr(peg$currPos, 3) === peg$c3) {
                //           s3 = peg$c3;
                peg$currPos += 3;
            }
            else {
                //           s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e8);
                }
            }
            if (s3 !== peg$FAILED) {
                //           s1 = [s1, s2, s3];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    return s0;
}
function peg$parseNumberLiteral() {
    var s0, s1, s2, s3, s4, s5;
    //     s0 = peg$currPos;
    //     s1 = [];
    if (peg$r4.test(input.charAt(peg$currPos))) {
        //       s2 = input.charAt(peg$currPos);
        peg$currPos++;
    }
    else {
        //       s2 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e9);
        }
    }
    if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
            s1.push(s2);
            if (peg$r4.test(input.charAt(peg$currPos))) {
                //           s2 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s2 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e9);
                }
            }
        }
    }
    else {
        //       s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 46) {
            //         s3 = peg$c4;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e10);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = [];
            if (peg$r4.test(input.charAt(peg$currPos))) {
                //           s5 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e9);
                }
            }
            if (s5 !== peg$FAILED) {
                while (s5 !== peg$FAILED) {
                    s4.push(s5);
                    if (peg$r4.test(input.charAt(peg$currPos))) {
                        //               s5 = input.charAt(peg$currPos);
                        peg$currPos++;
                    }
                    else {
                        //               s5 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e9);
                        }
                    }
                }
            }
            else {
                //           s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
                //           s3 = [s3, s4];
                //           s2 = s3;
            }
            else {
                peg$currPos = s2;
                //           s2 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s2;
            //         s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
            //         s2 = null;
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseUUID() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;
    //     s0 = peg$currPos;
    //     s1 = peg$parsehex8();
    if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 45) {
            //         s2 = peg$c5;
            peg$currPos++;
        }
        else {
            //         s2 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e11);
            }
        }
        if (s2 !== peg$FAILED) {
            //         s3 = peg$parsehex4();
            if (s3 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 45) {
                    //             s4 = peg$c5;
                    peg$currPos++;
                }
                else {
                    //             s4 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e11);
                    }
                }
                if (s4 !== peg$FAILED) {
                    //             s5 = peg$parsehex4();
                    if (s5 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 45) {
                            //                 s6 = peg$c5;
                            peg$currPos++;
                        }
                        else {
                            //                 s6 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e11);
                            }
                        }
                        if (s6 !== peg$FAILED) {
                            //                 s7 = peg$parsehex4();
                            if (s7 !== peg$FAILED) {
                                if (input.charCodeAt(peg$currPos) === 45) {
                                    //                     s8 = peg$c5;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s8 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e11);
                                    }
                                }
                                if (s8 !== peg$FAILED) {
                                    //                     s9 = peg$parsehex12();
                                    if (s9 !== peg$FAILED) {
                                        //                       s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsehex() {
    var s0;
    if (peg$r5.test(input.charAt(peg$currPos))) {
        //       s0 = input.charAt(peg$currPos);
        peg$currPos++;
    }
    else {
        //       s0 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e12);
        }
    }
    return s0;
}
function peg$parsehex4() {
    var s0, s1, s2, s3, s4;
    //     s0 = peg$currPos;
    //     s1 = peg$parsehex();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parsehex();
        if (s2 !== peg$FAILED) {
            //         s3 = peg$parsehex();
            if (s3 !== peg$FAILED) {
                //           s4 = peg$parsehex();
                if (s4 !== peg$FAILED) {
                    //             s1 = [s1, s2, s3, s4];
                    //             s0 = s1;
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsehex8() {
    var s0, s1, s2;
    //     s0 = peg$currPos;
    //     s1 = peg$parsehex4();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parsehex4();
        if (s2 !== peg$FAILED) {
            //         s1 = [s1, s2];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsehex12() {
    var s0, s1, s2, s3;
    //     s0 = peg$currPos;
    //     s1 = peg$parsehex4();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parsehex4();
        if (s2 !== peg$FAILED) {
            //         s3 = peg$parsehex4();
            if (s3 !== peg$FAILED) {
                //           s1 = [s1, s2, s3];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseTimestamp() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26;
    //     s0 = peg$currPos;
    //     s1 = peg$parsedigit();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parsedigit();
        if (s2 !== peg$FAILED) {
            //         s3 = peg$parsedigit();
            if (s3 !== peg$FAILED) {
                //           s4 = peg$parsedigit();
                if (s4 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 45) {
                        //               s5 = peg$c5;
                        peg$currPos++;
                    }
                    else {
                        //               s5 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e11);
                        }
                    }
                    if (s5 !== peg$FAILED) {
                        //               s6 = peg$parsedigit();
                        if (s6 !== peg$FAILED) {
                            //                 s7 = peg$parsedigit();
                            if (s7 !== peg$FAILED) {
                                if (input.charCodeAt(peg$currPos) === 45) {
                                    //                     s8 = peg$c5;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s8 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e11);
                                    }
                                }
                                if (s8 !== peg$FAILED) {
                                    //                     s9 = peg$parsedigit();
                                    if (s9 !== peg$FAILED) {
                                        //                       s10 = peg$parsedigit();
                                        if (s10 !== peg$FAILED) {
                                            if (input.charCodeAt(peg$currPos) === 84) {
                                                //                           s11 = peg$c6;
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s11 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e13);
                                                }
                                            }
                                            if (s11 !== peg$FAILED) {
                                                //                           s12 = peg$parsedigit();
                                                if (s12 !== peg$FAILED) {
                                                    //                             s13 = peg$parsedigit();
                                                    if (s13 !== peg$FAILED) {
                                                        if (input.charCodeAt(peg$currPos) === 58) {
                                                            //                                 s14 = peg$c7;
                                                            peg$currPos++;
                                                        }
                                                        else {
                                                            //                                 s14 = peg$FAILED;
                                                            if (peg$silentFails === 0) {
                                                                peg$fail(peg$e14);
                                                            }
                                                        }
                                                        if (s14 !== peg$FAILED) {
                                                            //                                 s15 = peg$parsedigit();
                                                            if (s15 !== peg$FAILED) {
                                                                //                                   s16 = peg$parsedigit();
                                                                if (s16 !== peg$FAILED) {
                                                                    if (input.charCodeAt(peg$currPos) === 58) {
                                                                        //                                       s17 = peg$c7;
                                                                        peg$currPos++;
                                                                    }
                                                                    else {
                                                                        //                                       s17 = peg$FAILED;
                                                                        if (peg$silentFails === 0) {
                                                                            peg$fail(peg$e14);
                                                                        }
                                                                    }
                                                                    if (s17 !== peg$FAILED) {
                                                                        //                                       s18 = peg$parsedigit();
                                                                        if (s18 !== peg$FAILED) {
                                                                            //                                         s19 = peg$parsedigit();
                                                                            if (s19 !== peg$FAILED) {
                                                                                if (input.charCodeAt(peg$currPos) === 90) {
                                                                                    //                                             s20 = peg$c8;
                                                                                    peg$currPos++;
                                                                                }
                                                                                else {
                                                                                    //                                             s20 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) {
                                                                                        peg$fail(peg$e15);
                                                                                    }
                                                                                }
                                                                                if (s20 === peg$FAILED) {
                                                                                    //                                             s20 = peg$currPos;
                                                                                    if (input.charCodeAt(peg$currPos) === 43) {
                                                                                        //                                               s21 = peg$c9;
                                                                                        peg$currPos++;
                                                                                    }
                                                                                    else {
                                                                                        //                                               s21 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) {
                                                                                            peg$fail(peg$e16);
                                                                                        }
                                                                                    }
                                                                                    if (s21 !== peg$FAILED) {
                                                                                        //                                               s22 = peg$parsedigit();
                                                                                        if (s22 !== peg$FAILED) {
                                                                                            //                                                 s23 = peg$parsedigit();
                                                                                            if (s23 !== peg$FAILED) {
                                                                                                if (input.charCodeAt(peg$currPos) === 58) {
                                                                                                    //                                                     s24 = peg$c7;
                                                                                                    peg$currPos++;
                                                                                                }
                                                                                                else {
                                                                                                    //                                                     s24 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) {
                                                                                                        peg$fail(peg$e14);
                                                                                                    }
                                                                                                }
                                                                                                if (s24 !== peg$FAILED) {
                                                                                                    //                                                     s25 = peg$parsedigit();
                                                                                                    if (s25 !== peg$FAILED) {
                                                                                                        //                                                       s26 = peg$parsedigit();
                                                                                                        if (s26 !== peg$FAILED) {
                                                                                                            //                                                         s21 = [s21, s22, s23, s24, s25, s26];
                                                                                                            //                                                         s20 = s21;
                                                                                                        }
                                                                                                        else {
                                                                                                            peg$currPos = s20;
                                                                                                            //                                                         s20 = peg$FAILED;
                                                                                                        }
                                                                                                    }
                                                                                                    else {
                                                                                                        peg$currPos = s20;
                                                                                                        //                                                       s20 = peg$FAILED;
                                                                                                    }
                                                                                                }
                                                                                                else {
                                                                                                    peg$currPos = s20;
                                                                                                    //                                                     s20 = peg$FAILED;
                                                                                                }
                                                                                            }
                                                                                            else {
                                                                                                peg$currPos = s20;
                                                                                                //                                                   s20 = peg$FAILED;
                                                                                            }
                                                                                        }
                                                                                        else {
                                                                                            peg$currPos = s20;
                                                                                            //                                                 s20 = peg$FAILED;
                                                                                        }
                                                                                    }
                                                                                    else {
                                                                                        peg$currPos = s20;
                                                                                        //                                               s20 = peg$FAILED;
                                                                                    }
                                                                                }
                                                                                if (s20 !== peg$FAILED) {
                                                                                    //                                             s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20];
                                                                                    //                                             s0 = s1;
                                                                                }
                                                                                else {
                                                                                    peg$currPos = s0;
                                                                                    //                                             s0 = peg$FAILED;
                                                                                }
                                                                            }
                                                                            else {
                                                                                peg$currPos = s0;
                                                                                //                                           s0 = peg$FAILED;
                                                                            }
                                                                        }
                                                                        else {
                                                                            peg$currPos = s0;
                                                                            //                                         s0 = peg$FAILED;
                                                                        }
                                                                    }
                                                                    else {
                                                                        peg$currPos = s0;
                                                                        //                                       s0 = peg$FAILED;
                                                                    }
                                                                }
                                                                else {
                                                                    peg$currPos = s0;
                                                                    //                                     s0 = peg$FAILED;
                                                                }
                                                            }
                                                            else {
                                                                peg$currPos = s0;
                                                                //                                   s0 = peg$FAILED;
                                                            }
                                                        }
                                                        else {
                                                            peg$currPos = s0;
                                                            //                                 s0 = peg$FAILED;
                                                        }
                                                    }
                                                    else {
                                                        peg$currPos = s0;
                                                        //                               s0 = peg$FAILED;
                                                    }
                                                }
                                                else {
                                                    peg$currPos = s0;
                                                    //                             s0 = peg$FAILED;
                                                }
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsedigit() {
    var s0;
    if (peg$r4.test(input.charAt(peg$currPos))) {
        //       s0 = input.charAt(peg$currPos);
        peg$currPos++;
    }
    else {
        //       s0 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e9);
        }
    }
    return s0;
}
function peg$parseReserved() {
    var s0, s1, s2, s3;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c10) {
        //       s1 = peg$c10;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e17);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$currPos;
        peg$silentFails++;
        if (peg$r3.test(input.charAt(peg$currPos))) {
            //         s3 = input.charAt(peg$currPos);
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e6);
            }
        }
        peg$silentFails--;
        if (s3 === peg$FAILED) {
            //         s2 = undefined;
        }
        else {
            peg$currPos = s2;
            //         s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
            //         s1 = [s1, s2];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = peg$currPos;
        if (input.substr(peg$currPos, 6) === peg$c11) {
            //         s1 = peg$c11;
            peg$currPos += 6;
        }
        else {
            //         s1 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e18);
            }
        }
        if (s1 !== peg$FAILED) {
            //         s2 = peg$currPos;
            peg$silentFails++;
            if (peg$r3.test(input.charAt(peg$currPos))) {
                //           s3 = input.charAt(peg$currPos);
                peg$currPos++;
            }
            else {
                //           s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e6);
                }
            }
            peg$silentFails--;
            if (s3 === peg$FAILED) {
                //           s2 = undefined;
            }
            else {
                peg$currPos = s2;
                //           s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
                //           s1 = [s1, s2];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
            //         s0 = peg$currPos;
            if (input.substr(peg$currPos, 6) === peg$c12) {
                //           s1 = peg$c12;
                peg$currPos += 6;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e19);
                }
            }
            if (s1 !== peg$FAILED) {
                //           s2 = peg$currPos;
                peg$silentFails++;
                if (peg$r3.test(input.charAt(peg$currPos))) {
                    //             s3 = input.charAt(peg$currPos);
                    peg$currPos++;
                }
                else {
                    //             s3 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e6);
                    }
                }
                peg$silentFails--;
                if (s3 === peg$FAILED) {
                    //             s2 = undefined;
                }
                else {
                    peg$currPos = s2;
                    //             s2 = peg$FAILED;
                }
                if (s2 !== peg$FAILED) {
                    //             s1 = [s1, s2];
                    //             s0 = s1;
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
                //           s0 = peg$currPos;
                if (input.substr(peg$currPos, 6) === peg$c13) {
                    //             s1 = peg$c13;
                    peg$currPos += 6;
                }
                else {
                    //             s1 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e20);
                    }
                }
                if (s1 !== peg$FAILED) {
                    //             s2 = peg$currPos;
                    peg$silentFails++;
                    if (peg$r3.test(input.charAt(peg$currPos))) {
                        //               s3 = input.charAt(peg$currPos);
                        peg$currPos++;
                    }
                    else {
                        //               s3 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e6);
                        }
                    }
                    peg$silentFails--;
                    if (s3 === peg$FAILED) {
                        //               s2 = undefined;
                    }
                    else {
                        peg$currPos = s2;
                        //               s2 = peg$FAILED;
                    }
                    if (s2 !== peg$FAILED) {
                        //               s1 = [s1, s2];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                    //             s0 = peg$currPos;
                    if (input.substr(peg$currPos, 4) === peg$c14) {
                        //               s1 = peg$c14;
                        peg$currPos += 4;
                    }
                    else {
                        //               s1 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e21);
                        }
                    }
                    if (s1 !== peg$FAILED) {
                        //               s2 = peg$currPos;
                        peg$silentFails++;
                        if (peg$r3.test(input.charAt(peg$currPos))) {
                            //                 s3 = input.charAt(peg$currPos);
                            peg$currPos++;
                        }
                        else {
                            //                 s3 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e6);
                            }
                        }
                        peg$silentFails--;
                        if (s3 === peg$FAILED) {
                            //                 s2 = undefined;
                        }
                        else {
                            peg$currPos = s2;
                            //                 s2 = peg$FAILED;
                        }
                        if (s2 !== peg$FAILED) {
                            //                 s1 = [s1, s2];
                            //                 s0 = s1;
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                        //               s0 = peg$currPos;
                        if (input.substr(peg$currPos, 4) === peg$c15) {
                            //                 s1 = peg$c15;
                            peg$currPos += 4;
                        }
                        else {
                            //                 s1 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e22);
                            }
                        }
                        if (s1 !== peg$FAILED) {
                            //                 s2 = peg$currPos;
                            peg$silentFails++;
                            if (peg$r3.test(input.charAt(peg$currPos))) {
                                //                   s3 = input.charAt(peg$currPos);
                                peg$currPos++;
                            }
                            else {
                                //                   s3 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e6);
                                }
                            }
                            peg$silentFails--;
                            if (s3 === peg$FAILED) {
                                //                   s2 = undefined;
                            }
                            else {
                                peg$currPos = s2;
                                //                   s2 = peg$FAILED;
                            }
                            if (s2 !== peg$FAILED) {
                                //                   s1 = [s1, s2];
                                //                   s0 = s1;
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                            //                 s0 = peg$currPos;
                            if (input.substr(peg$currPos, 5) === peg$c16) {
                                //                   s1 = peg$c16;
                                peg$currPos += 5;
                            }
                            else {
                                //                   s1 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e23);
                                }
                            }
                            if (s1 !== peg$FAILED) {
                                //                   s2 = peg$currPos;
                                peg$silentFails++;
                                if (peg$r3.test(input.charAt(peg$currPos))) {
                                    //                     s3 = input.charAt(peg$currPos);
                                    peg$currPos++;
                                }
                                else {
                                    //                     s3 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e6);
                                    }
                                }
                                peg$silentFails--;
                                if (s3 === peg$FAILED) {
                                    //                     s2 = undefined;
                                }
                                else {
                                    peg$currPos = s2;
                                    //                     s2 = peg$FAILED;
                                }
                                if (s2 !== peg$FAILED) {
                                    //                     s1 = [s1, s2];
                                    //                     s0 = s1;
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                            if (s0 === peg$FAILED) {
                                //                   s0 = peg$currPos;
                                if (input.substr(peg$currPos, 14) === peg$c17) {
                                    //                     s1 = peg$c17;
                                    peg$currPos += 14;
                                }
                                else {
                                    //                     s1 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e24);
                                    }
                                }
                                if (s1 !== peg$FAILED) {
                                    //                     s2 = peg$currPos;
                                    peg$silentFails++;
                                    if (peg$r3.test(input.charAt(peg$currPos))) {
                                        //                       s3 = input.charAt(peg$currPos);
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s3 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e6);
                                        }
                                    }
                                    peg$silentFails--;
                                    if (s3 === peg$FAILED) {
                                        //                       s2 = undefined;
                                    }
                                    else {
                                        peg$currPos = s2;
                                        //                       s2 = peg$FAILED;
                                    }
                                    if (s2 !== peg$FAILED) {
                                        //                       s1 = [s1, s2];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                                if (s0 === peg$FAILED) {
                                    //                     s0 = peg$currPos;
                                    if (input.substr(peg$currPos, 9) === peg$c18) {
                                        //                       s1 = peg$c18;
                                        peg$currPos += 9;
                                    }
                                    else {
                                        //                       s1 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e25);
                                        }
                                    }
                                    if (s1 !== peg$FAILED) {
                                        //                       s2 = peg$currPos;
                                        peg$silentFails++;
                                        if (peg$r3.test(input.charAt(peg$currPos))) {
                                            //                         s3 = input.charAt(peg$currPos);
                                            peg$currPos++;
                                        }
                                        else {
                                            //                         s3 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e6);
                                            }
                                        }
                                        peg$silentFails--;
                                        if (s3 === peg$FAILED) {
                                            //                         s2 = undefined;
                                        }
                                        else {
                                            peg$currPos = s2;
                                            //                         s2 = peg$FAILED;
                                        }
                                        if (s2 !== peg$FAILED) {
                                            //                         s1 = [s1, s2];
                                            //                         s0 = s1;
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                    if (s0 === peg$FAILED) {
                                        //                       s0 = peg$currPos;
                                        if (input.substr(peg$currPos, 8) === peg$c19) {
                                            //                         s1 = peg$c19;
                                            peg$currPos += 8;
                                        }
                                        else {
                                            //                         s1 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e26);
                                            }
                                        }
                                        if (s1 !== peg$FAILED) {
                                            //                         s2 = peg$currPos;
                                            peg$silentFails++;
                                            if (peg$r3.test(input.charAt(peg$currPos))) {
                                                //                           s3 = input.charAt(peg$currPos);
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s3 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e6);
                                                }
                                            }
                                            peg$silentFails--;
                                            if (s3 === peg$FAILED) {
                                                //                           s2 = undefined;
                                            }
                                            else {
                                                peg$currPos = s2;
                                                //                           s2 = peg$FAILED;
                                            }
                                            if (s2 !== peg$FAILED) {
                                                //                           s1 = [s1, s2];
                                                //                           s0 = s1;
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                        if (s0 === peg$FAILED) {
                                            //                         s0 = peg$currPos;
                                            if (input.substr(peg$currPos, 17) === peg$c20) {
                                                //                           s1 = peg$c20;
                                                peg$currPos += 17;
                                            }
                                            else {
                                                //                           s1 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e27);
                                                }
                                            }
                                            if (s1 !== peg$FAILED) {
                                                //                           s2 = peg$currPos;
                                                peg$silentFails++;
                                                if (peg$r3.test(input.charAt(peg$currPos))) {
                                                    //                             s3 = input.charAt(peg$currPos);
                                                    peg$currPos++;
                                                }
                                                else {
                                                    //                             s3 = peg$FAILED;
                                                    if (peg$silentFails === 0) {
                                                        peg$fail(peg$e6);
                                                    }
                                                }
                                                peg$silentFails--;
                                                if (s3 === peg$FAILED) {
                                                    //                             s2 = undefined;
                                                }
                                                else {
                                                    peg$currPos = s2;
                                                    //                             s2 = peg$FAILED;
                                                }
                                                if (s2 !== peg$FAILED) {
                                                    //                             s1 = [s1, s2];
                                                    //                             s0 = s1;
                                                }
                                                else {
                                                    peg$currPos = s0;
                                                    //                             s0 = peg$FAILED;
                                                }
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                            if (s0 === peg$FAILED) {
                                                //                           s0 = peg$currPos;
                                                if (input.substr(peg$currPos, 10) === peg$c21) {
                                                    //                             s1 = peg$c21;
                                                    peg$currPos += 10;
                                                }
                                                else {
                                                    //                             s1 = peg$FAILED;
                                                    if (peg$silentFails === 0) {
                                                        peg$fail(peg$e28);
                                                    }
                                                }
                                                if (s1 !== peg$FAILED) {
                                                    //                             s2 = peg$currPos;
                                                    peg$silentFails++;
                                                    if (peg$r3.test(input.charAt(peg$currPos))) {
                                                        //                               s3 = input.charAt(peg$currPos);
                                                        peg$currPos++;
                                                    }
                                                    else {
                                                        //                               s3 = peg$FAILED;
                                                        if (peg$silentFails === 0) {
                                                            peg$fail(peg$e6);
                                                        }
                                                    }
                                                    peg$silentFails--;
                                                    if (s3 === peg$FAILED) {
                                                        //                               s2 = undefined;
                                                    }
                                                    else {
                                                        peg$currPos = s2;
                                                        //                               s2 = peg$FAILED;
                                                    }
                                                    if (s2 !== peg$FAILED) {
                                                        //                               s1 = [s1, s2];
                                                        //                               s0 = s1;
                                                    }
                                                    else {
                                                        peg$currPos = s0;
                                                        //                               s0 = peg$FAILED;
                                                    }
                                                }
                                                else {
                                                    peg$currPos = s0;
                                                    //                             s0 = peg$FAILED;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return s0;
}
function peg$parseEOF() {
    var s0, s1;
    //     s0 = peg$currPos;
    peg$silentFails++;
    if (input.length > peg$currPos) {
        //       s1 = input.charAt(peg$currPos);
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e3);
        }
    }
    peg$silentFails--;
    if (s1 === peg$FAILED) {
        //       s0 = undefined;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsedocument() {
    var s0, s1, s2, s3, s4;
    //     s0 = peg$currPos;
    //     s1 = peg$parse_();
    //     s2 = peg$parseModule();
    if (s2 !== peg$FAILED) {
        //       s3 = peg$parse_();
        //       s4 = peg$parseEOF();
        if (s4 !== peg$FAILED) {
            //         s1 = [s1, s2, s3, s4];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseModule() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c10) {
        //       s1 = peg$c10;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e17);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s5 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = [];
                //           s8 = peg$parseTopLevel();
                while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    //             s8 = peg$parseTopLevel();
                }
                //           s8 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 125) {
                    //             s9 = peg$c23;
                    peg$currPos++;
                }
                else {
                    //             s9 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e30);
                    }
                }
                if (s9 !== peg$FAILED) {
                    //             s10 = peg$parse_();
                    //             s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                    //             s0 = s1;
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseTopLevel() {
    var s0;
    //     s0 = peg$parseImport();
    if (s0 === peg$FAILED) {
        //       s0 = peg$parseDevice();
        if (s0 === peg$FAILED) {
            //         s0 = peg$parsePolicy();
            if (s0 === peg$FAILED) {
                //           s0 = peg$parseGoal();
                if (s0 === peg$FAILED) {
                    //             s0 = peg$parseTypeDef();
                    if (s0 === peg$FAILED) {
                        //               s0 = peg$parseAgent();
                        if (s0 === peg$FAILED) {
                            //                 s0 = peg$parseExecutionBlock();
                            if (s0 === peg$FAILED) {
                                //                   s0 = peg$parsePolyBlock();
                                if (s0 === peg$FAILED) {
                                    //                     s0 = peg$parseWorkflow();
                                    if (s0 === peg$FAILED) {
                                        //                       s0 = peg$parseCoordinationBlock();
                                        if (s0 === peg$FAILED) {
                                            //                         s0 = peg$parseAuditTrail();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return s0;
}
function peg$parseImport() {
    var s0, s1, s2, s3, s4, s5, s6;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c11) {
        //       s1 = peg$c11;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e18);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentList();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 59) {
                //           s5 = peg$c24;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e31);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s1 = [s1, s2, s3, s4, s5, s6];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseIdentList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseIdentifier();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIdentifier();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseDevice() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c12) {
        //       s1 = peg$c12;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e19);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s5 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseDeviceBody();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s9 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseDeviceBody() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 4) === peg$c26) {
        //       s1 = peg$c26;
        peg$currPos += 4;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e33);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 91) {
                //           s5 = peg$c27;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e34);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseCapList();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 93) {
                        //               s9 = peg$c28;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e35);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 44) {
                            //                 s11 = peg$c25;
                            peg$currPos++;
                        }
                        else {
                            //                 s11 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e32);
                            }
                        }
                        if (s11 !== peg$FAILED) {
                            //                 s12 = peg$parse_();
                            if (input.substr(peg$currPos, 6) === peg$c13) {
                                //                   s13 = peg$c13;
                                peg$currPos += 6;
                            }
                            else {
                                //                   s13 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e20);
                                }
                            }
                            if (s13 !== peg$FAILED) {
                                //                   s14 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    //                     s15 = peg$c7;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s15 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e14);
                                    }
                                }
                                if (s15 !== peg$FAILED) {
                                    //                     s16 = peg$parse_();
                                    //                     s17 = peg$parsePolicyBlock();
                                    if (s17 !== peg$FAILED) {
                                        //                       s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseCapList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseCap();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseCap();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseCap();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseCap() {
    var s0, s1, s2, s3, s4, s5, s6;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$currPos;
        //       s3 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 64) {
            //         s4 = peg$c29;
            peg$currPos++;
        }
        else {
            //         s4 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e36);
            }
        }
        if (s4 !== peg$FAILED) {
            //         s5 = peg$parse_();
            //         s6 = peg$parseIdentifier();
            if (s6 !== peg$FAILED) {
                //           s3 = [s3, s4, s5, s6];
                //           s2 = s3;
            }
            else {
                peg$currPos = s2;
                //           s2 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s2;
            //         s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
            //         s2 = null;
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsePolicy() {
    var s0, s1, s2, s3, s4;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c13) {
        //       s1 = peg$c13;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e20);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parsePolicyBlock();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s1 = [s1, s2, s3, s4];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsePolicyBlock() {
    var s0, s1, s2, s3, s4, s5, s6;
    //     s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
        //       s1 = peg$c22;
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e29);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parsePolicyEntries();
        if (s3 === peg$FAILED) {
            //         s3 = null;
        }
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 125) {
            //         s5 = peg$c23;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e30);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s1 = [s1, s2, s3, s4, s5, s6];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsePolicyEntries() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parsePolicyEntry();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parsePolicyEntry();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parsePolicyEntry();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsePolicyEntry() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 7) === peg$c30) {
        //       s1 = peg$c30;
        peg$currPos += 7;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e37);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s1 = [s1, s2, s3];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = peg$currPos;
        if (input.substr(peg$currPos, 13) === peg$c31) {
            //         s1 = peg$c31;
            peg$currPos += 13;
        }
        else {
            //         s1 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e38);
            }
        }
        if (s1 !== peg$FAILED) {
            //         s2 = peg$parse_();
            //         s3 = peg$parseNumberLiteral();
            if (s3 !== peg$FAILED) {
                //           s4 = peg$parse_();
                //           s5 = peg$parseIdentifier();
                if (s5 !== peg$FAILED) {
                    //             s6 = peg$parse_();
                    if (input.substr(peg$currPos, 4) === peg$c32) {
                        //               s7 = peg$c32;
                        peg$currPos += 4;
                    }
                    else {
                        //               s7 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e39);
                        }
                    }
                    if (s7 !== peg$FAILED) {
                        //               s8 = peg$parseIdentifier();
                        if (s8 !== peg$FAILED) {
                            //                 s1 = [s1, s2, s3, s4, s5, s6, s7, s8];
                            //                 s0 = s1;
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
            //         s0 = peg$currPos;
            if (input.substr(peg$currPos, 8) === peg$c33) {
                //           s1 = peg$c33;
                peg$currPos += 8;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e40);
                }
            }
            if (s1 !== peg$FAILED) {
                //           s2 = peg$parse_();
                if (input.substr(peg$currPos, 8) === peg$c34) {
                    //             s3 = peg$c34;
                    peg$currPos += 8;
                }
                else {
                    //             s3 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e41);
                    }
                }
                if (s3 !== peg$FAILED) {
                    //             s4 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 40) {
                        //               s5 = peg$c35;
                        peg$currPos++;
                    }
                    else {
                        //               s5 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e42);
                        }
                    }
                    if (s5 !== peg$FAILED) {
                        //               s6 = peg$parse_();
                        //               s7 = peg$parseWeightList();
                        if (s7 !== peg$FAILED) {
                            //                 s8 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 41) {
                                //                   s9 = peg$c36;
                                peg$currPos++;
                            }
                            else {
                                //                   s9 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e43);
                                }
                            }
                            if (s9 !== peg$FAILED) {
                                //                   s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                                //                   s0 = s1;
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
                //           s0 = peg$currPos;
                if (input.substr(peg$currPos, 15) === peg$c37) {
                    //             s1 = peg$c37;
                    peg$currPos += 15;
                }
                else {
                    //             s1 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e44);
                    }
                }
                if (s1 !== peg$FAILED) {
                    //             s2 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 58) {
                        //               s3 = peg$c7;
                        peg$currPos++;
                    }
                    else {
                        //               s3 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e14);
                        }
                    }
                    if (s3 !== peg$FAILED) {
                        //               s4 = peg$parse_();
                        if (input.substr(peg$currPos, 4) === peg$c38) {
                            //                 s5 = peg$c38;
                            peg$currPos += 4;
                        }
                        else {
                            //                 s5 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e45);
                            }
                        }
                        if (s5 === peg$FAILED) {
                            if (input.substr(peg$currPos, 5) === peg$c39) {
                                //                   s5 = peg$c39;
                                peg$currPos += 5;
                            }
                            else {
                                //                   s5 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e46);
                                }
                            }
                        }
                        if (s5 !== peg$FAILED) {
                            //                 s1 = [s1, s2, s3, s4, s5];
                            //                 s0 = s1;
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                    //             s0 = peg$currPos;
                    if (input.substr(peg$currPos, 7) === peg$c40) {
                        //               s1 = peg$c40;
                        peg$currPos += 7;
                    }
                    else {
                        //               s1 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e47);
                        }
                    }
                    if (s1 !== peg$FAILED) {
                        //               s2 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 58) {
                            //                 s3 = peg$c7;
                            peg$currPos++;
                        }
                        else {
                            //                 s3 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e14);
                            }
                        }
                        if (s3 !== peg$FAILED) {
                            //                 s4 = peg$parse_();
                            //                 s5 = peg$parseStringLiteral();
                            if (s5 !== peg$FAILED) {
                                //                   s1 = [s1, s2, s3, s4, s5];
                                //                   s0 = s1;
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                        //               s0 = peg$currPos;
                        if (input.substr(peg$currPos, 4) === peg$c41) {
                            //                 s1 = peg$c41;
                            peg$currPos += 4;
                        }
                        else {
                            //                 s1 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e48);
                            }
                        }
                        if (s1 !== peg$FAILED) {
                            //                 s2 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 58) {
                                //                   s3 = peg$c7;
                                peg$currPos++;
                            }
                            else {
                                //                   s3 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e14);
                                }
                            }
                            if (s3 !== peg$FAILED) {
                                //                   s4 = peg$parse_();
                                if (input.substr(peg$currPos, 4) === peg$c38) {
                                    //                     s5 = peg$c38;
                                    peg$currPos += 4;
                                }
                                else {
                                    //                     s5 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e45);
                                    }
                                }
                                if (s5 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 5) === peg$c39) {
                                        //                       s5 = peg$c39;
                                        peg$currPos += 5;
                                    }
                                    else {
                                        //                       s5 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e46);
                                        }
                                    }
                                }
                                if (s5 !== peg$FAILED) {
                                    //                     s1 = [s1, s2, s3, s4, s5];
                                    //                     s0 = s1;
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                            //                 s0 = peg$currPos;
                            if (input.substr(peg$currPos, 10) === peg$c42) {
                                //                   s1 = peg$c42;
                                peg$currPos += 10;
                            }
                            else {
                                //                   s1 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e49);
                                }
                            }
                            if (s1 !== peg$FAILED) {
                                //                   s2 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    //                     s3 = peg$c7;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s3 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e14);
                                    }
                                }
                                if (s3 !== peg$FAILED) {
                                    //                     s4 = peg$parse_();
                                    //                     s5 = peg$parseStringLiteral();
                                    if (s5 !== peg$FAILED) {
                                        //                       s1 = [s1, s2, s3, s4, s5];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                    }
                }
            }
        }
    }
    return s0;
}
function peg$parseWeightList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseWeight();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseWeight();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseWeight();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseWeight() {
    var s0, s1, s2, s3, s4, s5;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseNumberLiteral();
            if (s5 !== peg$FAILED) {
                //           s1 = [s1, s2, s3, s4, s5];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseGoal() {
    var s0, s1, s2, s3, s4, s5, s6;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 4) === peg$c14) {
        //       s1 = peg$c14;
        peg$currPos += 4;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e21);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseStringLiteral();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseGoalBlock();
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s1 = [s1, s2, s3, s4, s5, s6];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseGoalBlock() {
    var s0, s1, s2, s3, s4, s5, s6;
    //     s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
        //       s1 = peg$c22;
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e29);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseGoalEntries();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 125) {
                //           s5 = peg$c23;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e30);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s1 = [s1, s2, s3, s4, s5, s6];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseGoalEntries() {
    var s0, s1, s2;
    //     s0 = peg$currPos;
    //     s1 = peg$parseConstraintsOpt();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parseOptimizeOpt();
        if (s2 !== peg$FAILED) {
            //         s1 = [s1, s2];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseConstraintsOpt() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 11) === peg$c43) {
        //       s1 = peg$c43;
        peg$currPos += 11;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e50);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 123) {
            //         s3 = peg$c22;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e29);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseConstraintList();
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 125) {
                    //             s7 = peg$c23;
                    peg$currPos++;
                }
                else {
                    //             s7 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e30);
                    }
                }
                if (s7 !== peg$FAILED) {
                    //             s1 = [s1, s2, s3, s4, s5, s6, s7];
                    //             s0 = s1;
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = '';
    }
    return s0;
}
function peg$parseConstraintList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseConstraint();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 59) {
            //         s5 = peg$c24;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e31);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseConstraint();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 59) {
                //           s5 = peg$c24;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e31);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseConstraint();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseConstraint() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseComparator();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseNumberLiteral();
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIdentifier();
                if (s7 !== peg$FAILED) {
                    //             s1 = [s1, s2, s3, s4, s5, s6, s7];
                    //             s0 = s1;
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseComparator() {
    var s0;
    if (input.substr(peg$currPos, 2) === peg$c44) {
        //       s0 = peg$c44;
        peg$currPos += 2;
    }
    else {
        //       s0 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e51);
        }
    }
    if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 2) === peg$c45) {
            //         s0 = peg$c45;
            peg$currPos += 2;
        }
        else {
            //         s0 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e52);
            }
        }
        if (s0 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 60) {
                //           s0 = peg$c46;
                peg$currPos++;
            }
            else {
                //           s0 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e53);
                }
            }
            if (s0 === peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 62) {
                    //             s0 = peg$c47;
                    peg$currPos++;
                }
                else {
                    //             s0 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e54);
                    }
                }
                if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 2) === peg$c48) {
                        //               s0 = peg$c48;
                        peg$currPos += 2;
                    }
                    else {
                        //               s0 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e55);
                        }
                    }
                }
            }
        }
    }
    return s0;
}
function peg$parseOptimizeOpt() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 8) === peg$c49) {
        //       s1 = peg$c49;
        peg$currPos += 8;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e56);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.substr(peg$currPos, 3) === peg$c50) {
            //         s3 = peg$c50;
            peg$currPos += 3;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e57);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s5 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIdentifierList();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s9 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = '';
    }
    return s0;
}
function peg$parseIdentifierList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseIdentifier();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIdentifier();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseTypeDef() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 4) === peg$c15) {
        //       s1 = peg$c15;
        peg$currPos += 4;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e22);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 61) {
                //           s5 = peg$c51;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e58);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseTypeExpr();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 59) {
                        //               s9 = peg$c24;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e31);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseTypeExpr() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 91) {
            //         s3 = peg$c27;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e34);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseNumberLiteral();
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 93) {
                    //             s7 = peg$c28;
                    peg$currPos++;
                }
                else {
                    //             s7 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e35);
                    }
                }
                if (s7 !== peg$FAILED) {
                    //             s1 = [s1, s2, s3, s4, s5, s6, s7];
                    //             s0 = s1;
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = peg$parseIdentifier();
        if (s0 === peg$FAILED) {
            //         s0 = peg$currPos;
            if (input.substr(peg$currPos, 5) === peg$c52) {
                //           s1 = peg$c52;
                peg$currPos += 5;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e59);
                }
            }
            if (s1 !== peg$FAILED) {
                //           s2 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 40) {
                    //             s3 = peg$c35;
                    peg$currPos++;
                }
                else {
                    //             s3 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e42);
                    }
                }
                if (s3 !== peg$FAILED) {
                    //             s4 = peg$parse_();
                    //             s5 = peg$parseTypeExprList();
                    if (s5 !== peg$FAILED) {
                        //               s6 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 41) {
                            //                 s7 = peg$c36;
                            peg$currPos++;
                        }
                        else {
                            //                 s7 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e43);
                            }
                        }
                        if (s7 !== peg$FAILED) {
                            //                 s1 = [s1, s2, s3, s4, s5, s6, s7];
                            //                 s0 = s1;
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
    }
    return s0;
}
function peg$parseTypeExprList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseTypeExpr();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseTypeExpr();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseTypeExpr();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseAgent() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 5) === peg$c16) {
        //       s1 = peg$c16;
        peg$currPos += 5;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e23);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseAgentAttrs();
            //         s6 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s7 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s7 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s7 !== peg$FAILED) {
                //           s8 = peg$parse_();
                //           s9 = peg$parseAgentBody();
                if (s9 !== peg$FAILED) {
                    //             s10 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s11 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s11 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s11 !== peg$FAILED) {
                        //               s12 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseAgentAttrs() {
    var s0, s1;
    //     s0 = [];
    //     s1 = peg$parseAttr();
    while (s1 !== peg$FAILED) {
        s0.push(s1);
        //       s1 = peg$parseAttr();
    }
    return s0;
}
function peg$parseAttr() {
    var s0, s1, s2, s3, s4, s5, s6;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c53) {
        //       s1 = peg$c53;
        peg$currPos += 2;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e60);
        }
    }
    if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 8) === peg$c54) {
            //         s1 = peg$c54;
            peg$currPos += 8;
        }
        else {
            //         s1 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e61);
            }
        }
        if (s1 === peg$FAILED) {
            if (input.substr(peg$currPos, 10) === peg$c55) {
                //           s1 = peg$c55;
                peg$currPos += 10;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e62);
                }
            }
            if (s1 === peg$FAILED) {
                if (input.substr(peg$currPos, 9) === peg$c56) {
                    //             s1 = peg$c56;
                    peg$currPos += 9;
                }
                else {
                    //             s1 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e63);
                    }
                }
            }
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseUUID();
            if (s5 === peg$FAILED) {
                //           s5 = peg$parseStringLiteral();
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s1 = [s1, s2, s3, s4, s5, s6];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseAgentBody() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIOBlock();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 59) {
            //         s5 = peg$c24;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e31);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseAssignment();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 59) {
                //           s5 = peg$c24;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e31);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseAssignment();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s3 = peg$parse_();
        //       s1 = [s1, s2, s3];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseIOBlock() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c57) {
        //       s1 = peg$c57;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e64);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 91) {
                //           s5 = peg$c27;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e34);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIOList();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 93) {
                        //               s9 = peg$c28;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e35);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 44) {
                            //                 s11 = peg$c25;
                            peg$currPos++;
                        }
                        else {
                            //                 s11 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e32);
                            }
                        }
                        if (s11 !== peg$FAILED) {
                            //                 s12 = peg$parse_();
                            if (input.substr(peg$currPos, 7) === peg$c58) {
                                //                   s13 = peg$c58;
                                peg$currPos += 7;
                            }
                            else {
                                //                   s13 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e65);
                                }
                            }
                            if (s13 !== peg$FAILED) {
                                //                   s14 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    //                     s15 = peg$c7;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s15 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e14);
                                    }
                                }
                                if (s15 !== peg$FAILED) {
                                    //                     s16 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 91) {
                                        //                       s17 = peg$c27;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s17 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e34);
                                        }
                                    }
                                    if (s17 !== peg$FAILED) {
                                        //                       s18 = peg$parse_();
                                        //                       s19 = peg$parseIOList();
                                        if (s19 !== peg$FAILED) {
                                            //                         s20 = peg$parse_();
                                            if (input.charCodeAt(peg$currPos) === 93) {
                                                //                           s21 = peg$c28;
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s21 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e35);
                                                }
                                            }
                                            if (s21 !== peg$FAILED) {
                                                //                           s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21];
                                                //                           s0 = s1;
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseIOList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIODecl();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseIODecl();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIODecl();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseIODecl() {
    var s0, s1, s2, s3, s4, s5, s6;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = peg$currPos;
        //       s3 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 64) {
            //         s4 = peg$c29;
            peg$currPos++;
        }
        else {
            //         s4 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e36);
            }
        }
        if (s4 !== peg$FAILED) {
            //         s5 = peg$parse_();
            //         s6 = peg$parseIdentifier();
            if (s6 !== peg$FAILED) {
                //           s3 = [s3, s4, s5, s6];
                //           s2 = s3;
            }
            else {
                peg$currPos = s2;
                //           s2 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s2;
            //         s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
            //         s2 = null;
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseAssignment() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c59) {
        //       s1 = peg$c59;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e66);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseIdentifier();
            if (s5 === peg$FAILED) {
                if (input.substr(peg$currPos, 10) === peg$c60) {
                    //             s5 = peg$c60;
                    peg$currPos += 10;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e67);
                    }
                }
            }
            if (s5 !== peg$FAILED) {
                //           s1 = [s1, s2, s3, s4, s5];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = peg$currPos;
        if (input.substr(peg$currPos, 7) === peg$c61) {
            //         s1 = peg$c61;
            peg$currPos += 7;
        }
        else {
            //         s1 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e68);
            }
        }
        if (s1 !== peg$FAILED) {
            //         s2 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 58) {
                //           s3 = peg$c7;
                peg$currPos++;
            }
            else {
                //           s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e14);
                }
            }
            if (s3 !== peg$FAILED) {
                //           s4 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 91) {
                    //             s5 = peg$c27;
                    peg$currPos++;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e34);
                    }
                }
                if (s5 !== peg$FAILED) {
                    //             s6 = peg$parse_();
                    //             s7 = peg$parseStringLiteralList();
                    if (s7 !== peg$FAILED) {
                        //               s8 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 93) {
                            //                 s9 = peg$c28;
                            peg$currPos++;
                        }
                        else {
                            //                 s9 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e35);
                            }
                        }
                        if (s9 !== peg$FAILED) {
                            //                 s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                            //                 s0 = s1;
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
            //         s0 = peg$currPos;
            if (input.substr(peg$currPos, 6) === peg$c12) {
                //           s1 = peg$c12;
                peg$currPos += 6;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e19);
                }
            }
            if (s1 !== peg$FAILED) {
                //           s2 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 58) {
                    //             s3 = peg$c7;
                    peg$currPos++;
                }
                else {
                    //             s3 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e14);
                    }
                }
                if (s3 !== peg$FAILED) {
                    //             s4 = peg$parse_();
                    //             s5 = peg$parseIdentifier();
                    if (s5 === peg$FAILED) {
                        if (input.substr(peg$currPos, 3) === peg$c62) {
                            //                 s5 = peg$c62;
                            peg$currPos += 3;
                        }
                        else {
                            //                 s5 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e69);
                            }
                        }
                    }
                    if (s5 !== peg$FAILED) {
                        //               s1 = [s1, s2, s3, s4, s5];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
                //           s0 = peg$currPos;
                if (input.substr(peg$currPos, 8) === peg$c63) {
                    //             s1 = peg$c63;
                    peg$currPos += 8;
                }
                else {
                    //             s1 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e70);
                    }
                }
                if (s1 !== peg$FAILED) {
                    //             s2 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 58) {
                        //               s3 = peg$c7;
                        peg$currPos++;
                    }
                    else {
                        //               s3 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e14);
                        }
                    }
                    if (s3 !== peg$FAILED) {
                        //               s4 = peg$parse_();
                        //               s5 = peg$parseIdentifier();
                        if (s5 !== peg$FAILED) {
                            //                 s6 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 123) {
                                //                   s7 = peg$c22;
                                peg$currPos++;
                            }
                            else {
                                //                   s7 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e29);
                                }
                            }
                            if (s7 !== peg$FAILED) {
                                //                   s8 = peg$parse_();
                                if (input.substr(peg$currPos, 5) === peg$c64) {
                                    //                     s9 = peg$c64;
                                    peg$currPos += 5;
                                }
                                else {
                                    //                     s9 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e71);
                                    }
                                }
                                if (s9 !== peg$FAILED) {
                                    //                     s10 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 58) {
                                        //                       s11 = peg$c7;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s11 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e14);
                                        }
                                    }
                                    if (s11 !== peg$FAILED) {
                                        //                       s12 = peg$parse_();
                                        //                       s13 = peg$parseIdentifier();
                                        if (s13 !== peg$FAILED) {
                                            //                         s14 = peg$parse_();
                                            if (input.charCodeAt(peg$currPos) === 125) {
                                                //                           s15 = peg$c23;
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s15 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e30);
                                                }
                                            }
                                            if (s15 !== peg$FAILED) {
                                                //                           s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15];
                                                //                           s0 = s1;
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                    //             s0 = peg$currPos;
                    if (input.substr(peg$currPos, 6) === peg$c13) {
                        //               s1 = peg$c13;
                        peg$currPos += 6;
                    }
                    else {
                        //               s1 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e20);
                        }
                    }
                    if (s1 !== peg$FAILED) {
                        //               s2 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 58) {
                            //                 s3 = peg$c7;
                            peg$currPos++;
                        }
                        else {
                            //                 s3 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e14);
                            }
                        }
                        if (s3 !== peg$FAILED) {
                            //                 s4 = peg$parse_();
                            //                 s5 = peg$parsePolicyBlock();
                            if (s5 !== peg$FAILED) {
                                //                   s1 = [s1, s2, s3, s4, s5];
                                //                   s0 = s1;
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
            }
        }
    }
    return s0;
}
function peg$parseStringLiteralList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseStringLiteral();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseStringLiteral();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseStringLiteral();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseExecutionBlock() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 14) === peg$c17) {
        //       s1 = peg$c17;
        peg$currPos += 14;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e24);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseBlockAttrs();
            //         s6 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s7 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s7 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s7 !== peg$FAILED) {
                //           s8 = peg$parse_();
                //           s9 = peg$parseExecBlockBody();
                if (s9 !== peg$FAILED) {
                    //             s10 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s11 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s11 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s11 !== peg$FAILED) {
                        //               s12 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseBlockAttrs() {
    var s0, s1;
    //     s0 = [];
    //     s1 = peg$parseAttr();
    while (s1 !== peg$FAILED) {
        s0.push(s1);
        //       s1 = peg$parseAttr();
    }
    return s0;
}
function peg$parseExecBlockBody() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 5) === peg$c65) {
        //       s1 = peg$c65;
        peg$currPos += 5;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e72);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s5 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseExecEntries();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s9 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseExecEntries() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseExecEntry();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseExecEntry();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseExecEntry();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseExecEntry() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 4) === peg$c15) {
        //       s1 = peg$c15;
        peg$currPos += 4;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e22);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseIdentifier();
            if (s5 !== peg$FAILED) {
                //           s1 = [s1, s2, s3, s4, s5];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = peg$currPos;
        if (input.substr(peg$currPos, 5) === peg$c16) {
            //         s1 = peg$c16;
            peg$currPos += 5;
        }
        else {
            //         s1 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e23);
            }
        }
        if (s1 !== peg$FAILED) {
            //         s2 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 58) {
                //           s3 = peg$c7;
                peg$currPos++;
            }
            else {
                //           s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e14);
                }
            }
            if (s3 !== peg$FAILED) {
                //           s4 = peg$parse_();
                //           s5 = peg$parseIdentifier();
                if (s5 !== peg$FAILED) {
                    //             s1 = [s1, s2, s3, s4, s5];
                    //             s0 = s1;
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
            //         s0 = peg$currPos;
            if (input.substr(peg$currPos, 5) === peg$c66) {
                //           s1 = peg$c66;
                peg$currPos += 5;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e73);
                }
            }
            if (s1 !== peg$FAILED) {
                //           s2 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 58) {
                    //             s3 = peg$c7;
                    peg$currPos++;
                }
                else {
                    //             s3 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e14);
                    }
                }
                if (s3 !== peg$FAILED) {
                    //             s4 = peg$parse_();
                    //             s5 = peg$parseStringLiteral();
                    if (s5 !== peg$FAILED) {
                        //               s1 = [s1, s2, s3, s4, s5];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
                //           s0 = peg$currPos;
                if (input.substr(peg$currPos, 6) === peg$c57) {
                    //             s1 = peg$c57;
                    peg$currPos += 6;
                }
                else {
                    //             s1 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e64);
                    }
                }
                if (s1 !== peg$FAILED) {
                    //             s2 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 58) {
                        //               s3 = peg$c7;
                        peg$currPos++;
                    }
                    else {
                        //               s3 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e14);
                        }
                    }
                    if (s3 !== peg$FAILED) {
                        //               s4 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 91) {
                            //                 s5 = peg$c27;
                            peg$currPos++;
                        }
                        else {
                            //                 s5 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e34);
                            }
                        }
                        if (s5 !== peg$FAILED) {
                            //                 s6 = peg$parse_();
                            //                 s7 = peg$parseIOList();
                            if (s7 !== peg$FAILED) {
                                //                   s8 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 93) {
                                    //                     s9 = peg$c28;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s9 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e35);
                                    }
                                }
                                if (s9 !== peg$FAILED) {
                                    //                     s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                                    //                     s0 = s1;
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                    //             s0 = peg$currPos;
                    if (input.substr(peg$currPos, 7) === peg$c58) {
                        //               s1 = peg$c58;
                        peg$currPos += 7;
                    }
                    else {
                        //               s1 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e65);
                        }
                    }
                    if (s1 !== peg$FAILED) {
                        //               s2 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 58) {
                            //                 s3 = peg$c7;
                            peg$currPos++;
                        }
                        else {
                            //                 s3 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e14);
                            }
                        }
                        if (s3 !== peg$FAILED) {
                            //                 s4 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 91) {
                                //                   s5 = peg$c27;
                                peg$currPos++;
                            }
                            else {
                                //                   s5 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e34);
                                }
                            }
                            if (s5 !== peg$FAILED) {
                                //                   s6 = peg$parse_();
                                //                   s7 = peg$parseIOList();
                                if (s7 !== peg$FAILED) {
                                    //                     s8 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 93) {
                                        //                       s9 = peg$c28;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s9 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e35);
                                        }
                                    }
                                    if (s9 !== peg$FAILED) {
                                        //                       s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
            }
        }
    }
    return s0;
}
function peg$parsePolyBlock() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 9) === peg$c18) {
        //       s1 = peg$c18;
        peg$currPos += 9;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e25);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseBlockAttrs();
            //         s6 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s7 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s7 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s7 !== peg$FAILED) {
                //           s8 = peg$parse_();
                //           s9 = peg$parsePolyEntries();
                if (s9 !== peg$FAILED) {
                    //             s10 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s11 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s11 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s11 !== peg$FAILED) {
                        //               s12 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsePolyEntries() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parsePolyEntry();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parsePolyEntry();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parsePolyEntry();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsePolyEntry() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 4) === peg$c67) {
        //       s1 = peg$c67;
        peg$currPos += 4;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e74);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseStringLiteral();
            if (s5 !== peg$FAILED) {
                //           s1 = [s1, s2, s3, s4, s5];
                //           s0 = s1;
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
        //       s0 = peg$currPos;
        if (input.substr(peg$currPos, 4) === peg$c68) {
            //         s1 = peg$c68;
            peg$currPos += 4;
        }
        else {
            //         s1 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e75);
            }
        }
        if (s1 !== peg$FAILED) {
            //         s2 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 58) {
                //           s3 = peg$c7;
                peg$currPos++;
            }
            else {
                //           s3 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e14);
                }
            }
            if (s3 !== peg$FAILED) {
                //           s4 = peg$parse_();
                if (input.substr(peg$currPos, 3) === peg$c3) {
                    //             s5 = peg$c3;
                    peg$currPos += 3;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e8);
                    }
                }
                if (s5 !== peg$FAILED) {
                    //             s6 = [];
                    //             s7 = peg$currPos;
                    //             s8 = peg$currPos;
                    peg$silentFails++;
                    if (input.substr(peg$currPos, 3) === peg$c3) {
                        //               s9 = peg$c3;
                        peg$currPos += 3;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e8);
                        }
                    }
                    peg$silentFails--;
                    if (s9 === peg$FAILED) {
                        //               s8 = undefined;
                    }
                    else {
                        peg$currPos = s8;
                        //               s8 = peg$FAILED;
                    }
                    if (s8 !== peg$FAILED) {
                        if (input.length > peg$currPos) {
                            //                 s9 = input.charAt(peg$currPos);
                            peg$currPos++;
                        }
                        else {
                            //                 s9 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e3);
                            }
                        }
                        if (s9 !== peg$FAILED) {
                            //                 s8 = [s8, s9];
                            //                 s7 = s8;
                        }
                        else {
                            peg$currPos = s7;
                            //                 s7 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s7;
                        //               s7 = peg$FAILED;
                    }
                    while (s7 !== peg$FAILED) {
                        s6.push(s7);
                        //               s7 = peg$currPos;
                        //               s8 = peg$currPos;
                        peg$silentFails++;
                        if (input.substr(peg$currPos, 3) === peg$c3) {
                            //                 s9 = peg$c3;
                            peg$currPos += 3;
                        }
                        else {
                            //                 s9 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e8);
                            }
                        }
                        peg$silentFails--;
                        if (s9 === peg$FAILED) {
                            //                 s8 = undefined;
                        }
                        else {
                            peg$currPos = s8;
                            //                 s8 = peg$FAILED;
                        }
                        if (s8 !== peg$FAILED) {
                            if (input.length > peg$currPos) {
                                //                   s9 = input.charAt(peg$currPos);
                                peg$currPos++;
                            }
                            else {
                                //                   s9 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e3);
                                }
                            }
                            if (s9 !== peg$FAILED) {
                                //                   s8 = [s8, s9];
                                //                   s7 = s8;
                            }
                            else {
                                peg$currPos = s7;
                                //                   s7 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s7;
                            //                 s7 = peg$FAILED;
                        }
                    }
                    if (input.substr(peg$currPos, 3) === peg$c3) {
                        //               s7 = peg$c3;
                        peg$currPos += 3;
                    }
                    else {
                        //               s7 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e8);
                        }
                    }
                    if (s7 !== peg$FAILED) {
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
            //         s0 = peg$currPos;
            if (input.substr(peg$currPos, 5) === peg$c66) {
                //           s1 = peg$c66;
                peg$currPos += 5;
            }
            else {
                //           s1 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e73);
                }
            }
            if (s1 !== peg$FAILED) {
                //           s2 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 58) {
                    //             s3 = peg$c7;
                    peg$currPos++;
                }
                else {
                    //             s3 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e14);
                    }
                }
                if (s3 !== peg$FAILED) {
                    //             s4 = peg$parse_();
                    //             s5 = peg$parseStringLiteral();
                    if (s5 !== peg$FAILED) {
                        //               s1 = [s1, s2, s3, s4, s5];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
                //           s0 = peg$currPos;
                if (input.substr(peg$currPos, 6) === peg$c57) {
                    //             s1 = peg$c57;
                    peg$currPos += 6;
                }
                else {
                    //             s1 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e64);
                    }
                }
                if (s1 !== peg$FAILED) {
                    //             s2 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 58) {
                        //               s3 = peg$c7;
                        peg$currPos++;
                    }
                    else {
                        //               s3 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e14);
                        }
                    }
                    if (s3 !== peg$FAILED) {
                        //               s4 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 91) {
                            //                 s5 = peg$c27;
                            peg$currPos++;
                        }
                        else {
                            //                 s5 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e34);
                            }
                        }
                        if (s5 !== peg$FAILED) {
                            //                 s6 = peg$parse_();
                            //                 s7 = peg$parseIOList();
                            if (s7 !== peg$FAILED) {
                                //                   s8 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 93) {
                                    //                     s9 = peg$c28;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s9 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e35);
                                    }
                                }
                                if (s9 !== peg$FAILED) {
                                    //                     s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                                    //                     s0 = s1;
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                    //             s0 = peg$currPos;
                    if (input.substr(peg$currPos, 7) === peg$c58) {
                        //               s1 = peg$c58;
                        peg$currPos += 7;
                    }
                    else {
                        //               s1 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e65);
                        }
                    }
                    if (s1 !== peg$FAILED) {
                        //               s2 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 58) {
                            //                 s3 = peg$c7;
                            peg$currPos++;
                        }
                        else {
                            //                 s3 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e14);
                            }
                        }
                        if (s3 !== peg$FAILED) {
                            //                 s4 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 91) {
                                //                   s5 = peg$c27;
                                peg$currPos++;
                            }
                            else {
                                //                   s5 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e34);
                                }
                            }
                            if (s5 !== peg$FAILED) {
                                //                   s6 = peg$parse_();
                                //                   s7 = peg$parseIOList();
                                if (s7 !== peg$FAILED) {
                                    //                     s8 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 93) {
                                        //                       s9 = peg$c28;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s9 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e35);
                                        }
                                    }
                                    if (s9 !== peg$FAILED) {
                                        //                       s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                        //               s0 = peg$currPos;
                        if (input.substr(peg$currPos, 9) === peg$c69) {
                            //                 s1 = peg$c69;
                            peg$currPos += 9;
                        }
                        else {
                            //                 s1 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e76);
                            }
                        }
                        if (s1 !== peg$FAILED) {
                            //                 s2 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 58) {
                                //                   s3 = peg$c7;
                                peg$currPos++;
                            }
                            else {
                                //                   s3 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e14);
                                }
                            }
                            if (s3 !== peg$FAILED) {
                                //                   s4 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 123) {
                                    //                     s5 = peg$c22;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s5 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e29);
                                    }
                                }
                                if (s5 !== peg$FAILED) {
                                    //                     s6 = peg$parse_();
                                    //                     s7 = peg$parseContainerList();
                                    if (s7 !== peg$FAILED) {
                                        //                       s8 = peg$parse_();
                                        if (input.charCodeAt(peg$currPos) === 125) {
                                            //                         s9 = peg$c23;
                                            peg$currPos++;
                                        }
                                        else {
                                            //                         s9 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e30);
                                            }
                                        }
                                        if (s9 !== peg$FAILED) {
                                            //                         s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
                                            //                         s0 = s1;
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                            //                 s0 = peg$currPos;
                            if (input.substr(peg$currPos, 6) === peg$c13) {
                                //                   s1 = peg$c13;
                                peg$currPos += 6;
                            }
                            else {
                                //                   s1 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e20);
                                }
                            }
                            if (s1 !== peg$FAILED) {
                                //                   s2 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    //                     s3 = peg$c7;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s3 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e14);
                                    }
                                }
                                if (s3 !== peg$FAILED) {
                                    //                     s4 = peg$parse_();
                                    //                     s5 = peg$parsePolicyBlock();
                                    if (s5 !== peg$FAILED) {
                                        //                       s1 = [s1, s2, s3, s4, s5];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                    }
                }
            }
        }
    }
    return s0;
}
function peg$parseContainerList() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 44) {
            //         s5 = peg$c25;
            peg$currPos++;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e32);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseIdentifier();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
            s2.push(s3);
            //         s3 = peg$currPos;
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 44) {
                //           s5 = peg$c25;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e32);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIdentifier();
                if (s7 !== peg$FAILED) {
                    //             s4 = [s4, s5, s6, s7];
                    //             s3 = s4;
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        //       s1 = [s1, s2];
        //       s0 = s1;
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseWorkflow() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 8) === peg$c19) {
        //       s1 = peg$c19;
        peg$currPos += 8;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e26);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s5 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseWFBody();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s9 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseWFBody() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 4) === peg$c70) {
        //       s1 = peg$c70;
        peg$currPos += 4;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e77);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parsePlan();
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 44) {
                    //             s7 = peg$c25;
                    peg$currPos++;
                }
                else {
                    //             s7 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e32);
                    }
                }
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.substr(peg$currPos, 12) === peg$c71) {
                        //               s9 = peg$c71;
                        peg$currPos += 12;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e78);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 58) {
                            //                 s11 = peg$c7;
                            peg$currPos++;
                        }
                        else {
                            //                 s11 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e14);
                            }
                        }
                        if (s11 !== peg$FAILED) {
                            //                 s12 = peg$parse_();
                            //                 s13 = peg$parseCoordBlock();
                            if (s13 !== peg$FAILED) {
                                //                   s14 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 44) {
                                    //                     s15 = peg$c25;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s15 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e32);
                                    }
                                }
                                if (s15 !== peg$FAILED) {
                                    //                     s16 = peg$parse_();
                                    if (input.substr(peg$currPos, 8) === peg$c72) {
                                        //                       s17 = peg$c72;
                                        peg$currPos += 8;
                                    }
                                    else {
                                        //                       s17 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e79);
                                        }
                                    }
                                    if (s17 !== peg$FAILED) {
                                        //                       s18 = peg$parse_();
                                        if (input.charCodeAt(peg$currPos) === 58) {
                                            //                         s19 = peg$c7;
                                            peg$currPos++;
                                        }
                                        else {
                                            //                         s19 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e14);
                                            }
                                        }
                                        if (s19 !== peg$FAILED) {
                                            //                         s20 = peg$parse_();
                                            //                         s21 = peg$parseFeedback();
                                            if (s21 !== peg$FAILED) {
                                                //                           s22 = peg$currPos;
                                                //                           s23 = peg$parse_();
                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                    //                             s24 = peg$c25;
                                                    peg$currPos++;
                                                }
                                                else {
                                                    //                             s24 = peg$FAILED;
                                                    if (peg$silentFails === 0) {
                                                        peg$fail(peg$e32);
                                                    }
                                                }
                                                if (s24 !== peg$FAILED) {
                                                    //                             s25 = peg$parse_();
                                                    //                             s26 = peg$parseWorkflowPrims();
                                                    if (s26 !== peg$FAILED) {
                                                        //                               s23 = [s23, s24, s25, s26];
                                                        //                               s22 = s23;
                                                    }
                                                    else {
                                                        peg$currPos = s22;
                                                        //                               s22 = peg$FAILED;
                                                    }
                                                }
                                                else {
                                                    peg$currPos = s22;
                                                    //                             s22 = peg$FAILED;
                                                }
                                                if (s22 === peg$FAILED) {
                                                    //                             s22 = null;
                                                }
                                                //                           s23 = peg$parse_();
                                                //                           s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23];
                                                //                           s0 = s1;
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parsePlan() {
    var s0, s1, s2, s3, s4, s5, s6, s7;
    //     s0 = peg$currPos;
    //     s1 = peg$parseIdentifier();
    if (s1 !== peg$FAILED) {
        //       s2 = [];
        //       s3 = peg$currPos;
        //       s4 = peg$parse_();
        if (input.substr(peg$currPos, 2) === peg$c73) {
            //         s5 = peg$c73;
            peg$currPos += 2;
        }
        else {
            //         s5 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e80);
            }
        }
        if (s5 !== peg$FAILED) {
            //         s6 = peg$parse_();
            //         s7 = peg$parseIdentifier();
            if (s7 !== peg$FAILED) {
                //           s4 = [s4, s5, s6, s7];
                //           s3 = s4;
            }
            else {
                peg$currPos = s3;
                //           s3 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s3;
            //         s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
            while (s3 !== peg$FAILED) {
                s2.push(s3);
                //           s3 = peg$currPos;
                //           s4 = peg$parse_();
                if (input.substr(peg$currPos, 2) === peg$c73) {
                    //             s5 = peg$c73;
                    peg$currPos += 2;
                }
                else {
                    //             s5 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e80);
                    }
                }
                if (s5 !== peg$FAILED) {
                    //             s6 = peg$parse_();
                    //             s7 = peg$parseIdentifier();
                    if (s7 !== peg$FAILED) {
                        //               s4 = [s4, s5, s6, s7];
                        //               s3 = s4;
                    }
                    else {
                        peg$currPos = s3;
                        //               s3 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s3;
                    //             s3 = peg$FAILED;
                }
            }
        }
        else {
            //         s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
            //         s1 = [s1, s2];
            //         s0 = s1;
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseCoordBlock() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22;
    //     s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
        //       s1 = peg$c22;
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e29);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.substr(peg$currPos, 9) === peg$c74) {
            //         s3 = peg$c74;
            peg$currPos += 9;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e81);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 58) {
                //           s5 = peg$c7;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e14);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                if (input.substr(peg$currPos, 4) === peg$c38) {
                    //             s7 = peg$c38;
                    peg$currPos += 4;
                }
                else {
                    //             s7 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e45);
                    }
                }
                if (s7 === peg$FAILED) {
                    if (input.substr(peg$currPos, 5) === peg$c39) {
                        //               s7 = peg$c39;
                        peg$currPos += 5;
                    }
                    else {
                        //               s7 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e46);
                        }
                    }
                }
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$currPos;
                    //             s9 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 44) {
                        //               s10 = peg$c25;
                        peg$currPos++;
                    }
                    else {
                        //               s10 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e32);
                        }
                    }
                    if (s10 !== peg$FAILED) {
                        //               s11 = peg$parse_();
                        if (input.substr(peg$currPos, 8) === peg$c75) {
                            //                 s12 = peg$c75;
                            peg$currPos += 8;
                        }
                        else {
                            //                 s12 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e82);
                            }
                        }
                        if (s12 !== peg$FAILED) {
                            //                 s13 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 58) {
                                //                   s14 = peg$c7;
                                peg$currPos++;
                            }
                            else {
                                //                   s14 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e14);
                                }
                            }
                            if (s14 !== peg$FAILED) {
                                //                   s15 = peg$parse_();
                                //                   s16 = peg$parseIdentifier();
                                if (s16 !== peg$FAILED) {
                                    //                     s17 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 40) {
                                        //                       s18 = peg$c35;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s18 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e42);
                                        }
                                    }
                                    if (s18 !== peg$FAILED) {
                                        //                       s19 = peg$parse_();
                                        //                       s20 = peg$parseStringLiteralList();
                                        if (s20 !== peg$FAILED) {
                                            //                         s21 = peg$parse_();
                                            if (input.charCodeAt(peg$currPos) === 41) {
                                                //                           s22 = peg$c36;
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s22 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e43);
                                                }
                                            }
                                            if (s22 !== peg$FAILED) {
                                                //                           s9 = [s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22];
                                                //                           s8 = s9;
                                            }
                                            else {
                                                peg$currPos = s8;
                                                //                           s8 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s8;
                                            //                         s8 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s8;
                                        //                       s8 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s8;
                                    //                     s8 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s8;
                                //                   s8 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s8;
                            //                 s8 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s8;
                        //               s8 = peg$FAILED;
                    }
                    if (s8 === peg$FAILED) {
                        //               s8 = null;
                    }
                    //             s9 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s10 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s10 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s10 !== peg$FAILED) {
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseFeedback() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22;
    //     s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
        //       s1 = peg$c22;
        peg$currPos++;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e29);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.substr(peg$currPos, 7) === peg$c76) {
            //         s3 = peg$c76;
            peg$currPos += 7;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e83);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 58) {
                //           s5 = peg$c7;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e14);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                if (input.charCodeAt(peg$currPos) === 91) {
                    //             s7 = peg$c27;
                    peg$currPos++;
                }
                else {
                    //             s7 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e34);
                    }
                }
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    //             s9 = peg$parseIdentifierList();
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 93) {
                            //                 s11 = peg$c28;
                            peg$currPos++;
                        }
                        else {
                            //                 s11 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e35);
                            }
                        }
                        if (s11 !== peg$FAILED) {
                            //                 s12 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 44) {
                                //                   s13 = peg$c25;
                                peg$currPos++;
                            }
                            else {
                                //                   s13 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e32);
                                }
                            }
                            if (s13 !== peg$FAILED) {
                                //                   s14 = peg$parse_();
                                if (input.substr(peg$currPos, 8) === peg$c77) {
                                    //                     s15 = peg$c77;
                                    peg$currPos += 8;
                                }
                                else {
                                    //                     s15 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e84);
                                    }
                                }
                                if (s15 !== peg$FAILED) {
                                    //                     s16 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 58) {
                                        //                       s17 = peg$c7;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s17 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e14);
                                        }
                                    }
                                    if (s17 !== peg$FAILED) {
                                        //                       s18 = peg$parse_();
                                        //                       s19 = peg$parseStringLiteral();
                                        if (s19 !== peg$FAILED) {
                                            //                         s20 = peg$parse_();
                                            if (input.charCodeAt(peg$currPos) === 125) {
                                                //                           s21 = peg$c23;
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s21 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e30);
                                                }
                                            }
                                            if (s21 !== peg$FAILED) {
                                                //                           s22 = peg$parse_();
                                                //                           s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22];
                                                //                           s0 = s1;
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseWorkflowPrims() {
    var s0;
    //     s0 = peg$parseOnError();
    if (s0 === peg$FAILED) {
        //       s0 = peg$parseSchedule();
        if (s0 === peg$FAILED) {
            //         s0 = peg$parseAlert();
        }
    }
    return s0;
}
function peg$parseOnError() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 7) === peg$c78) {
        //       s1 = peg$c78;
        peg$currPos += 7;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e85);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.substr(peg$currPos, 5) === peg$c79) {
            //         s3 = peg$c79;
            peg$currPos += 5;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e86);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseNumberLiteral();
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                if (input.substr(peg$currPos, 5) === peg$c80) {
                    //             s7 = peg$c80;
                    peg$currPos += 5;
                }
                else {
                    //             s7 = peg$FAILED;
                    if (peg$silentFails === 0) {
                        peg$fail(peg$e87);
                    }
                }
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$currPos;
                    //             s9 = peg$parse_();
                    if (input.substr(peg$currPos, 4) === peg$c81) {
                        //               s10 = peg$c81;
                        peg$currPos += 4;
                    }
                    else {
                        //               s10 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e88);
                        }
                    }
                    if (s10 !== peg$FAILED) {
                        //               s11 = peg$parse_();
                        if (input.substr(peg$currPos, 7) === peg$c82) {
                            //                 s12 = peg$c82;
                            peg$currPos += 7;
                        }
                        else {
                            //                 s12 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e89);
                            }
                        }
                        if (s12 !== peg$FAILED) {
                            //                 s13 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 40) {
                                //                   s14 = peg$c35;
                                peg$currPos++;
                            }
                            else {
                                //                   s14 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e42);
                                }
                            }
                            if (s14 !== peg$FAILED) {
                                //                   s15 = peg$parse_();
                                //                   s16 = peg$parseStringLiteral();
                                if (s16 !== peg$FAILED) {
                                    //                     s17 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 41) {
                                        //                       s18 = peg$c36;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s18 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e43);
                                        }
                                    }
                                    if (s18 !== peg$FAILED) {
                                        //                       s9 = [s9, s10, s11, s12, s13, s14, s15, s16, s17, s18];
                                        //                       s8 = s9;
                                    }
                                    else {
                                        peg$currPos = s8;
                                        //                       s8 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s8;
                                    //                     s8 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s8;
                                //                   s8 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s8;
                            //                 s8 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s8;
                        //               s8 = peg$FAILED;
                    }
                    if (s8 === peg$FAILED) {
                        //               s8 = null;
                    }
                    //             s9 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 59) {
                        //               s10 = peg$c24;
                        peg$currPos++;
                    }
                    else {
                        //               s10 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e31);
                        }
                    }
                    if (s10 !== peg$FAILED) {
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseSchedule() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 8) === peg$c83) {
        //       s1 = peg$c83;
        peg$currPos += 8;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e90);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.substr(peg$currPos, 4) === peg$c84) {
            //         s3 = peg$c84;
            peg$currPos += 4;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e91);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 40) {
                //           s5 = peg$c35;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e42);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseStringLiteral();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 41) {
                        //               s9 = peg$c36;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e43);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$currPos;
                        //               s11 = peg$parse_();
                        if (input.substr(peg$currPos, 8) === peg$c85) {
                            //                 s12 = peg$c85;
                            peg$currPos += 8;
                        }
                        else {
                            //                 s12 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e92);
                            }
                        }
                        if (s12 !== peg$FAILED) {
                            //                 s13 = peg$parse_();
                            if (input.charCodeAt(peg$currPos) === 40) {
                                //                   s14 = peg$c35;
                                peg$currPos++;
                            }
                            else {
                                //                   s14 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e42);
                                }
                            }
                            if (s14 !== peg$FAILED) {
                                //                   s15 = peg$parse_();
                                if (input.substr(peg$currPos, 6) === peg$c86) {
                                    //                     s16 = peg$c86;
                                    peg$currPos += 6;
                                }
                                else {
                                    //                     s16 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e93);
                                    }
                                }
                                if (s16 !== peg$FAILED) {
                                    //                     s17 = peg$parse_();
                                    if (input.charCodeAt(peg$currPos) === 58) {
                                        //                       s18 = peg$c7;
                                        peg$currPos++;
                                    }
                                    else {
                                        //                       s18 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                            peg$fail(peg$e14);
                                        }
                                    }
                                    if (s18 !== peg$FAILED) {
                                        //                       s19 = peg$parse_();
                                        //                       s20 = peg$parseStringLiteral();
                                        if (s20 !== peg$FAILED) {
                                            //                         s21 = peg$parse_();
                                            if (input.charCodeAt(peg$currPos) === 41) {
                                                //                           s22 = peg$c36;
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s22 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e43);
                                                }
                                            }
                                            if (s22 !== peg$FAILED) {
                                                //                           s11 = [s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22];
                                                //                           s10 = s11;
                                            }
                                            else {
                                                peg$currPos = s10;
                                                //                           s10 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s10;
                                            //                         s10 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s10;
                                        //                       s10 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s10;
                                    //                     s10 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s10;
                                //                   s10 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s10;
                            //                 s10 = peg$FAILED;
                        }
                        if (s10 === peg$FAILED) {
                            //                 s10 = null;
                        }
                        //               s11 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 59) {
                            //                 s12 = peg$c24;
                            peg$currPos++;
                        }
                        else {
                            //                 s12 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e31);
                            }
                        }
                        if (s12 !== peg$FAILED) {
                            //                 s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12];
                            //                 s0 = s1;
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseAlert() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 5) === peg$c87) {
        //       s1 = peg$c87;
        peg$currPos += 5;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e94);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.substr(peg$currPos, 2) === peg$c88) {
            //         s3 = peg$c88;
            peg$currPos += 2;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e95);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            //         s5 = peg$parseIdentifier();
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseComparator();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    //             s9 = peg$parseNumberLiteral();
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        //               s11 = peg$parseIdentifier();
                        if (s11 === peg$FAILED) {
                            //                 s11 = null;
                        }
                        //               s12 = peg$parse_();
                        if (input.substr(peg$currPos, 4) === peg$c89) {
                            //                 s13 = peg$c89;
                            peg$currPos += 4;
                        }
                        else {
                            //                 s13 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e96);
                            }
                        }
                        if (s13 !== peg$FAILED) {
                            //                 s14 = peg$parse_();
                            if (input.substr(peg$currPos, 6) === peg$c90) {
                                //                   s15 = peg$c90;
                                peg$currPos += 6;
                            }
                            else {
                                //                   s15 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e97);
                                }
                            }
                            if (s15 !== peg$FAILED) {
                                //                   s16 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 40) {
                                    //                     s17 = peg$c35;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s17 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e42);
                                    }
                                }
                                if (s17 !== peg$FAILED) {
                                    //                     s18 = peg$parse_();
                                    //                     s19 = peg$parseStringLiteral();
                                    if (s19 !== peg$FAILED) {
                                        //                       s20 = peg$parse_();
                                        if (input.charCodeAt(peg$currPos) === 41) {
                                            //                         s21 = peg$c36;
                                            peg$currPos++;
                                        }
                                        else {
                                            //                         s21 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e43);
                                            }
                                        }
                                        if (s21 !== peg$FAILED) {
                                            //                         s22 = peg$parse_();
                                            if (input.charCodeAt(peg$currPos) === 59) {
                                                //                           s23 = peg$c24;
                                                peg$currPos++;
                                            }
                                            else {
                                                //                           s23 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e31);
                                                }
                                            }
                                            if (s23 !== peg$FAILED) {
                                                //                           s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23];
                                                //                           s0 = s1;
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseCoordinationBlock() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 17) === peg$c20) {
        //       s1 = peg$c20;
        peg$currPos += 17;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e27);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s5 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseCBBody();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s9 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseCBBody() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 6) === peg$c91) {
        //       s1 = peg$c91;
        peg$currPos += 6;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e98);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 91) {
                //           s5 = peg$c27;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e34);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseIdentifierList();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 93) {
                        //               s9 = peg$c28;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e35);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 44) {
                            //                 s11 = peg$c25;
                            peg$currPos++;
                        }
                        else {
                            //                 s11 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e32);
                            }
                        }
                        if (s11 !== peg$FAILED) {
                            //                 s12 = peg$parse_();
                            if (input.substr(peg$currPos, 8) === peg$c92) {
                                //                   s13 = peg$c92;
                                peg$currPos += 8;
                            }
                            else {
                                //                   s13 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e99);
                                }
                            }
                            if (s13 !== peg$FAILED) {
                                //                   s14 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    //                     s15 = peg$c7;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s15 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e14);
                                    }
                                }
                                if (s15 !== peg$FAILED) {
                                    //                     s16 = peg$parse_();
                                    //                     s17 = peg$parseIdentifier();
                                    if (s17 !== peg$FAILED) {
                                        //                       s18 = peg$parse_();
                                        if (input.charCodeAt(peg$currPos) === 44) {
                                            //                         s19 = peg$c25;
                                            peg$currPos++;
                                        }
                                        else {
                                            //                         s19 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                                peg$fail(peg$e32);
                                            }
                                        }
                                        if (s19 !== peg$FAILED) {
                                            //                         s20 = peg$parse_();
                                            if (input.substr(peg$currPos, 9) === peg$c93) {
                                                //                           s21 = peg$c93;
                                                peg$currPos += 9;
                                            }
                                            else {
                                                //                           s21 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                    peg$fail(peg$e100);
                                                }
                                            }
                                            if (s21 !== peg$FAILED) {
                                                //                           s22 = peg$parse_();
                                                if (input.charCodeAt(peg$currPos) === 58) {
                                                    //                             s23 = peg$c7;
                                                    peg$currPos++;
                                                }
                                                else {
                                                    //                             s23 = peg$FAILED;
                                                    if (peg$silentFails === 0) {
                                                        peg$fail(peg$e14);
                                                    }
                                                }
                                                if (s23 !== peg$FAILED) {
                                                    //                             s24 = peg$parse_();
                                                    if (input.charCodeAt(peg$currPos) === 123) {
                                                        //                               s25 = peg$c22;
                                                        peg$currPos++;
                                                    }
                                                    else {
                                                        //                               s25 = peg$FAILED;
                                                        if (peg$silentFails === 0) {
                                                            peg$fail(peg$e29);
                                                        }
                                                    }
                                                    if (s25 !== peg$FAILED) {
                                                        //                               s26 = peg$parse_();
                                                        //                               s27 = [];
                                                        //                               s28 = peg$currPos;
                                                        //                               s29 = peg$currPos;
                                                        peg$silentFails++;
                                                        if (input.charCodeAt(peg$currPos) === 125) {
                                                            //                                 s30 = peg$c23;
                                                            peg$currPos++;
                                                        }
                                                        else {
                                                            //                                 s30 = peg$FAILED;
                                                            if (peg$silentFails === 0) {
                                                                peg$fail(peg$e30);
                                                            }
                                                        }
                                                        peg$silentFails--;
                                                        if (s30 === peg$FAILED) {
                                                            //                                 s29 = undefined;
                                                        }
                                                        else {
                                                            peg$currPos = s29;
                                                            //                                 s29 = peg$FAILED;
                                                        }
                                                        if (s29 !== peg$FAILED) {
                                                            if (input.length > peg$currPos) {
                                                                //                                   s30 = input.charAt(peg$currPos);
                                                                peg$currPos++;
                                                            }
                                                            else {
                                                                //                                   s30 = peg$FAILED;
                                                                if (peg$silentFails === 0) {
                                                                    peg$fail(peg$e3);
                                                                }
                                                            }
                                                            if (s30 !== peg$FAILED) {
                                                                //                                   s29 = [s29, s30];
                                                                //                                   s28 = s29;
                                                            }
                                                            else {
                                                                peg$currPos = s28;
                                                                //                                   s28 = peg$FAILED;
                                                            }
                                                        }
                                                        else {
                                                            peg$currPos = s28;
                                                            //                                 s28 = peg$FAILED;
                                                        }
                                                        while (s28 !== peg$FAILED) {
                                                            s27.push(s28);
                                                            //                                 s28 = peg$currPos;
                                                            //                                 s29 = peg$currPos;
                                                            peg$silentFails++;
                                                            if (input.charCodeAt(peg$currPos) === 125) {
                                                                //                                   s30 = peg$c23;
                                                                peg$currPos++;
                                                            }
                                                            else {
                                                                //                                   s30 = peg$FAILED;
                                                                if (peg$silentFails === 0) {
                                                                    peg$fail(peg$e30);
                                                                }
                                                            }
                                                            peg$silentFails--;
                                                            if (s30 === peg$FAILED) {
                                                                //                                   s29 = undefined;
                                                            }
                                                            else {
                                                                peg$currPos = s29;
                                                                //                                   s29 = peg$FAILED;
                                                            }
                                                            if (s29 !== peg$FAILED) {
                                                                if (input.length > peg$currPos) {
                                                                    //                                     s30 = input.charAt(peg$currPos);
                                                                    peg$currPos++;
                                                                }
                                                                else {
                                                                    //                                     s30 = peg$FAILED;
                                                                    if (peg$silentFails === 0) {
                                                                        peg$fail(peg$e3);
                                                                    }
                                                                }
                                                                if (s30 !== peg$FAILED) {
                                                                    //                                     s29 = [s29, s30];
                                                                    //                                     s28 = s29;
                                                                }
                                                                else {
                                                                    peg$currPos = s28;
                                                                    //                                     s28 = peg$FAILED;
                                                                }
                                                            }
                                                            else {
                                                                peg$currPos = s28;
                                                                //                                   s28 = peg$FAILED;
                                                            }
                                                        }
                                                        //                               s28 = peg$parse_();
                                                        if (input.charCodeAt(peg$currPos) === 125) {
                                                            //                                 s29 = peg$c23;
                                                            peg$currPos++;
                                                        }
                                                        else {
                                                            //                                 s29 = peg$FAILED;
                                                            if (peg$silentFails === 0) {
                                                                peg$fail(peg$e30);
                                                            }
                                                        }
                                                        if (s29 !== peg$FAILED) {
                                                            //                                 s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29];
                                                            //                                 s0 = s1;
                                                        }
                                                        else {
                                                            peg$currPos = s0;
                                                            //                                 s0 = peg$FAILED;
                                                        }
                                                    }
                                                    else {
                                                        peg$currPos = s0;
                                                        //                               s0 = peg$FAILED;
                                                    }
                                                }
                                                else {
                                                    peg$currPos = s0;
                                                    //                             s0 = peg$FAILED;
                                                }
                                            }
                                            else {
                                                peg$currPos = s0;
                                                //                           s0 = peg$FAILED;
                                            }
                                        }
                                        else {
                                            peg$currPos = s0;
                                            //                         s0 = peg$FAILED;
                                        }
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseAuditTrail() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 10) === peg$c21) {
        //       s1 = peg$c21;
        peg$currPos += 10;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e28);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        //       s3 = peg$parseIdentifier();
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 123) {
                //           s5 = peg$c22;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e29);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseATBody();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 125) {
                        //               s9 = peg$c23;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e30);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        //               s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10];
                        //               s0 = s1;
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
function peg$parseATBody() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
    //     s0 = peg$currPos;
    if (input.substr(peg$currPos, 10) === peg$c94) {
        //       s1 = peg$c94;
        peg$currPos += 10;
    }
    else {
        //       s1 = peg$FAILED;
        if (peg$silentFails === 0) {
            peg$fail(peg$e101);
        }
    }
    if (s1 !== peg$FAILED) {
        //       s2 = peg$parse_();
        if (input.charCodeAt(peg$currPos) === 58) {
            //         s3 = peg$c7;
            peg$currPos++;
        }
        else {
            //         s3 = peg$FAILED;
            if (peg$silentFails === 0) {
                peg$fail(peg$e14);
            }
        }
        if (s3 !== peg$FAILED) {
            //         s4 = peg$parse_();
            if (input.charCodeAt(peg$currPos) === 91) {
                //           s5 = peg$c27;
                peg$currPos++;
            }
            else {
                //           s5 = peg$FAILED;
                if (peg$silentFails === 0) {
                    peg$fail(peg$e34);
                }
            }
            if (s5 !== peg$FAILED) {
                //           s6 = peg$parse_();
                //           s7 = peg$parseStringLiteralList();
                if (s7 !== peg$FAILED) {
                    //             s8 = peg$parse_();
                    if (input.charCodeAt(peg$currPos) === 93) {
                        //               s9 = peg$c28;
                        peg$currPos++;
                    }
                    else {
                        //               s9 = peg$FAILED;
                        if (peg$silentFails === 0) {
                            peg$fail(peg$e35);
                        }
                    }
                    if (s9 !== peg$FAILED) {
                        //               s10 = peg$parse_();
                        if (input.charCodeAt(peg$currPos) === 44) {
                            //                 s11 = peg$c25;
                            peg$currPos++;
                        }
                        else {
                            //                 s11 = peg$FAILED;
                            if (peg$silentFails === 0) {
                                peg$fail(peg$e32);
                            }
                        }
                        if (s11 !== peg$FAILED) {
                            //                 s12 = peg$parse_();
                            if (input.substr(peg$currPos, 5) === peg$c95) {
                                //                   s13 = peg$c95;
                                peg$currPos += 5;
                            }
                            else {
                                //                   s13 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                    peg$fail(peg$e102);
                                }
                            }
                            if (s13 !== peg$FAILED) {
                                //                   s14 = peg$parse_();
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    //                     s15 = peg$c7;
                                    peg$currPos++;
                                }
                                else {
                                    //                     s15 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                        peg$fail(peg$e14);
                                    }
                                }
                                if (s15 !== peg$FAILED) {
                                    //                     s16 = peg$parse_();
                                    //                     s17 = peg$parseIdentifier();
                                    if (s17 !== peg$FAILED) {
                                        //                       s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17];
                                        //                       s0 = s1;
                                    }
                                    else {
                                        peg$currPos = s0;
                                        //                       s0 = peg$FAILED;
                                    }
                                }
                                else {
                                    peg$currPos = s0;
                                    //                     s0 = peg$FAILED;
                                }
                            }
                            else {
                                peg$currPos = s0;
                                //                   s0 = peg$FAILED;
                            }
                        }
                        else {
                            peg$currPos = s0;
                            //                 s0 = peg$FAILED;
                        }
                    }
                    else {
                        peg$currPos = s0;
                        //               s0 = peg$FAILED;
                    }
                }
                else {
                    peg$currPos = s0;
                    //             s0 = peg$FAILED;
                }
            }
            else {
                peg$currPos = s0;
                //           s0 = peg$FAILED;
            }
        }
        else {
            peg$currPos = s0;
            //         s0 = peg$FAILED;
        }
    }
    else {
        peg$currPos = s0;
        //       s0 = peg$FAILED;
    }
    return s0;
}
peg$result = peg$startRuleFunction();
if (peg$result !== peg$FAILED && peg$currPos === input.length) {
    return peg$result;
}
else {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
    }
    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
}
// ---- AtomBlock Extension ----
AtomBlock
    = "atom";
__;
name: Identifier;
__;
"{";
__;
body: AtomBody;
__;
"}";
{
    return {
        kind: "AtomBlock",
        name,
        body,
        loc: location()
    };
}
AtomBody
    = protons;
ProtonDecl;
__;
electrons: ElectronDecl;
__;
policy: PolicyDecl;
__;
entanglement: EntangledDecl;
{
    return {
        protons,
        electrons,
        policy,
        entangledWith: entanglement
    };
}
ProtonDecl
    = "protons";
__;
":";
__;
"Bit";
"[";
size: NumberLiteral;
"]";
{
    return { kind: "Protons", size };
}
ElectronDecl
    = "electrons";
__;
":";
__;
"Bit";
"[";
size: NumberLiteral;
"]";
{
    return { kind: "Electrons", size };
}
PolicyDecl
    = "policy";
__;
":";
__;
"{";
__;
entries: PolicyEntries;
__;
"}";
{
    return { kind: "AtomPolicy", entries };
}
PolicyEntries
    = head;
PolicyEntry;
tail: (_);
",";
_;
PolicyEntry;
 * {
    return: [head, ...tail.map(e => e[3])]
};
PolicyEntry
    = key;
Identifier;
__;
":";
__;
value: (NumberLiteral / ArrayLiteral);
{
    return { key, value };
}
EntangledDecl
    = "entangled_with";
__;
":";
__;
"[";
__;
ids: IdentifierList;
__;
"]";
{
    return ids;
}
IdentifierList
    = head;
Identifier;
tail: (_);
",";
_;
Identifier;
 * {
    return: [head, ...tail.map(e => e[3])]
};
//# sourceMappingURL=grammar.js.map